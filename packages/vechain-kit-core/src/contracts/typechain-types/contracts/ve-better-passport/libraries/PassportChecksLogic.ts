/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  FunctionFragment,
  Interface,
  EventFragment,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
} from "../../../common";

export interface PassportChecksLogicInterface extends Interface {
  getEvent(
    nameOrSignatureOrTopic: "CheckToggled" | "MinimumGalaxyMemberLevelSet"
  ): EventFragment;
}

export namespace CheckToggledEvent {
  export type InputTuple = [checkName: string, enabled: boolean];
  export type OutputTuple = [checkName: string, enabled: boolean];
  export interface OutputObject {
    checkName: string;
    enabled: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace MinimumGalaxyMemberLevelSetEvent {
  export type InputTuple = [minimumGalaxyMemberLevel: BigNumberish];
  export type OutputTuple = [minimumGalaxyMemberLevel: bigint];
  export interface OutputObject {
    minimumGalaxyMemberLevel: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface PassportChecksLogic extends BaseContract {
  connect(runner?: ContractRunner | null): PassportChecksLogic;
  waitForDeployment(): Promise<this>;

  interface: PassportChecksLogicInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getEvent(
    key: "CheckToggled"
  ): TypedContractEvent<
    CheckToggledEvent.InputTuple,
    CheckToggledEvent.OutputTuple,
    CheckToggledEvent.OutputObject
  >;
  getEvent(
    key: "MinimumGalaxyMemberLevelSet"
  ): TypedContractEvent<
    MinimumGalaxyMemberLevelSetEvent.InputTuple,
    MinimumGalaxyMemberLevelSetEvent.OutputTuple,
    MinimumGalaxyMemberLevelSetEvent.OutputObject
  >;

  filters: {
    "CheckToggled(string,bool)": TypedContractEvent<
      CheckToggledEvent.InputTuple,
      CheckToggledEvent.OutputTuple,
      CheckToggledEvent.OutputObject
    >;
    CheckToggled: TypedContractEvent<
      CheckToggledEvent.InputTuple,
      CheckToggledEvent.OutputTuple,
      CheckToggledEvent.OutputObject
    >;

    "MinimumGalaxyMemberLevelSet(uint256)": TypedContractEvent<
      MinimumGalaxyMemberLevelSetEvent.InputTuple,
      MinimumGalaxyMemberLevelSetEvent.OutputTuple,
      MinimumGalaxyMemberLevelSetEvent.OutputObject
    >;
    MinimumGalaxyMemberLevelSet: TypedContractEvent<
      MinimumGalaxyMemberLevelSetEvent.InputTuple,
      MinimumGalaxyMemberLevelSetEvent.OutputTuple,
      MinimumGalaxyMemberLevelSetEvent.OutputObject
    >;
  };
}
