/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../common";
import type {
  PassportWhitelistAndBlacklistLogicV2,
  PassportWhitelistAndBlacklistLogicV2Interface,
} from "../../../../../../contracts/deprecated/V2/ve-better-passport/libraries/PassportWhitelistAndBlacklistLogicV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "removedBy",
        type: "address",
      },
    ],
    name: "RemovedUserFromBlacklist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "removedBy",
        type: "address",
      },
    ],
    name: "RemovedUserFromWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "blacklistedBy",
        type: "address",
      },
    ],
    name: "UserBlacklisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "whitelistedBy",
        type: "address",
      },
    ],
    name: "UserWhitelisted",
    type: "event",
  },
] as const;

const _bytecode =
  "0x61081c61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100825760003560e01c8063027ebfaa146100875780633999bf06146100a957806347a7c301146100cc5780635ff39ef1146100ec57806372589f9a146101135780637bc6a9f314610136578063f089c29214610156578063f7b16df914610169575b600080fd5b81801561009357600080fd5b506100a76100a2366004610713565b610189565b005b8180156100b557600080fd5b506100a76100c436600461074f565b600990910155565b8180156100d857600080fd5b506100a76100e7366004610713565b610211565b6100ff6100fa366004610713565b61027a565b604051901515815260200160405180910390f35b81801561011f57600080fd5b506100a761012e36600461074f565b600a90910155565b81801561014257600080fd5b506100a7610151366004610713565b61028f565b6100ff610164366004610713565b6102f8565b81801561017557600080fd5b506100a7610184366004610713565b610304565b610193828261038c565b156101a2576101a28282610211565b6001600160a01b03811660009081526006830160205260409020805460ff191660019081179091556101d790839083906103ae565b60405133906001600160a01b038316907fb238e099a93706e73d75fdb8fb35f9a0a146e80ead15480e50fbc9db1736aa0490600090a35050565b6001600160a01b03811660009081526005830160205260408120805460ff19169055610240908390839061044e565b60405133906001600160a01b038316907f757fc4750bdf4db673fc5e3da41490d3c39bddc5ff58d8072f69d06975768e6090600090a35050565b600061028683836104d7565b90505b92915050565b6001600160a01b03811660009081526006830160205260408120805460ff191690556102be90839083906103ae565b60405133906001600160a01b038316907fd12ee140a2e74664b10a866c6f75c8b756520ad9b6bbbe4c33f10811a62cbf7190600090a35050565b60006102868383610561565b61030e82826105eb565b1561031d5761031d828261028f565b6001600160a01b03811660009081526005830160205260409020805460ff19166001908117909155610352908390839061044e565b60405133906001600160a01b038316907f4bc18aa4b0095c9a3b5cdf42d2322d5a145591b04045988a995a5da42607545790600090a35050565b6001600160a01b03166000908152600591909101602052604090205460ff1690565b60006103ba848461060d565b9050826001600160a01b0316816001600160a01b0316036103db5750505050565b8115610417576001600160a01b0381166000908152600885016020526040812080546001929061040c908490610787565b909155506104489050565b6001600160a01b0381166000908152600885016020526040812080546001929061044290849061079a565b90915550505b50505050565b600061045a848461060d565b9050826001600160a01b0316816001600160a01b03160361047b5750505050565b81156104ac576001600160a01b0381166000908152600785016020526040812080546001929061040c908490610787565b6001600160a01b0381166000908152600785016020526040812080546001929061044290849061079a565b60006104e3838361060d565b91506104ef83836105eb565b156104fc57506001610289565b60006105088484610652565b5190508060000361051d576000915050610289565b6001600160a01b038316600090815260088501602052604081205490826105458360646107ad565b61054f91906107c4565b600a8701541115935050505092915050565b600061056d838361060d565b9150610579838361038c565b1561058657506001610289565b60006105928484610652565b519050806000036105a7576000915050610289565b6001600160a01b038316600090815260078501602052604081205490826105cf8360646107ad565b6105d991906107c4565b60098701541115935050505092915050565b6001600160a01b03166000908152600691909101602052604090205460ff1690565b6001600160a01b03811660009081526017830160205260408120819061063990610636906106cb565b90565b90506001600160a01b0381166102865782915050610289565b6001600160a01b03811660009081526019830160209081526040918290208054835181840281018401909452808452606093928301828280156106be57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116106a0575b5050505050905092915050565b80546000908015610709576106f3836106e560018461079a565b600091825260209091200190565b54600160601b90046001600160a01b031661070c565b60005b9392505050565b6000806040838503121561072657600080fd5b8235915060208301356001600160a01b038116811461074457600080fd5b809150509250929050565b6000806040838503121561076257600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b8082018082111561028957610289610771565b8181038181111561028957610289610771565b808202811582820484141761028957610289610771565b6000826107e157634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220053b02862eaeb0047edc5b0f411d42916fa7c76fe3b98091f56cc4bd6c56f21364736f6c63430008140033";

type PassportWhitelistAndBlacklistLogicV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PassportWhitelistAndBlacklistLogicV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PassportWhitelistAndBlacklistLogicV2__factory extends ContractFactory {
  constructor(...args: PassportWhitelistAndBlacklistLogicV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PassportWhitelistAndBlacklistLogicV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PassportWhitelistAndBlacklistLogicV2__factory {
    return super.connect(
      runner
    ) as PassportWhitelistAndBlacklistLogicV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PassportWhitelistAndBlacklistLogicV2Interface {
    return new Interface(_abi) as PassportWhitelistAndBlacklistLogicV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PassportWhitelistAndBlacklistLogicV2 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PassportWhitelistAndBlacklistLogicV2;
  }
}
