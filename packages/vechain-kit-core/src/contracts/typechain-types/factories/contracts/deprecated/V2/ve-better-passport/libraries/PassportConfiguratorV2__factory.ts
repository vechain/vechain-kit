/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../common";
import type {
  PassportConfiguratorV2,
  PassportConfiguratorV2Interface,
} from "../../../../../../contracts/deprecated/V2/ve-better-passport/libraries/PassportConfiguratorV2";

const _abi = [
  {
    inputs: [],
    name: "CheckpointUnorderedInsertion",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "bits",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "SafeCastOverflowedUintDowncast",
    type: "error",
  },
] as const;

const _bytecode =
  "0x6106fd61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80631cbb63951461005b578063869b26561461007d57806388da79bc1461009d578063e6eed3c2146100bd575b600080fd5b81801561006757600080fd5b5061007b6100763660046105b4565b6100dd565b005b81801561008957600080fd5b5061007b610098366004610670565b610197565b8180156100a957600080fd5b5061007b6100b8366004610670565b610232565b8180156100c957600080fd5b5061007b6100d8366004610670565b6102cd565b6100eb8282602001516102cd565b6100f9828260000151610232565b610107828260400151610197565b6060810151602483015560a08101516001830155610132610126610361565b60118401906000610370565b50506080810151601283015560016000908152600b83016020526040808220606490556002825280822060c890556003825290206101909055610120810151601383015560c0810151600a83015560e081015160098301556101000151601d90910155565b6001600160a01b03811661020d5760405162461bcd60e51b815260206004820152603260248201527f566542657474657250617373706f72743a2067616c6178794d656d62657220696044820152717320746865207a65726f206164647265737360701b60648201526084015b60405180910390fd5b60039190910180546001600160a01b0319166001600160a01b03909216919091179055565b6001600160a01b0381166102a85760405162461bcd60e51b815260206004820152603760248201527f566542657474657250617373706f72743a2078416c6c6f636174696f6e566f74604482015276696e6720697320746865207a65726f206164647265737360481b6064820152608401610204565b60029190910180546001600160a01b0319166001600160a01b03909216919091179055565b6001600160a01b03811661033c5760405162461bcd60e51b815260206004820152603060248201527f566542657474657250617373706f72743a2078324561726e417070732069732060448201526f746865207a65726f206164647265737360801b6064820152608401610204565b60049190910180546001600160a01b0319166001600160a01b03909216919091179055565b600061036b61038b565b905090565b60008061037e858585610396565b915091505b935093915050565b600061036b4361051e565b8254600090819080156104c35760006103c2876103b46001856106a0565b600091825260209091200190565b60408051808201909152905465ffffffffffff808216808452600160301b9092046001600160d01b03166020840152919250908716101561041657604051632520601d60e01b815260040160405180910390fd5b805165ffffffffffff8088169116036104625784610439886103b46001866106a0565b80546001600160d01b0392909216600160301b0265ffffffffffff9092169190911790556104b3565b6040805180820190915265ffffffffffff80881682526001600160d01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216600160301b029216919091179101555b6020015192508391506103839050565b50506040805180820190915265ffffffffffff80851682526001600160d01b0380851660208085019182528854600181018a5560008a815291822095519251909316600160301b029190931617920191909155905081610383565b600065ffffffffffff821115610551576040516306dfcc6560e41b81526030600482015260248101839052604401610204565b5090565b60405161014081016001600160401b038111828210171561058657634e487b7160e01b600052604160045260246000fd5b60405290565b6001600160a01b03811681146105a157600080fd5b50565b80356105af8161058c565b919050565b6000808284036101608112156105c957600080fd5b8335925061014080601f19830112156105e157600080fd5b6105e9610555565b91506105f7602086016105a4565b8252610605604086016105a4565b6020830152610616606086016105a4565b60408301526080850135606083015260a0850135608083015260c085013560a083015260e085013560c08301526101008086013560e084015261012080870135828501528287013581850152505050809150509250929050565b6000806040838503121561068357600080fd5b8235915060208301356106958161058c565b809150509250929050565b818103818111156106c157634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212206704d595c89a53aaf6c1dcce0c576bb7fba4d987bdcdea022c98157dd5365b6f64736f6c63430008140033";

type PassportConfiguratorV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PassportConfiguratorV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PassportConfiguratorV2__factory extends ContractFactory {
  constructor(...args: PassportConfiguratorV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PassportConfiguratorV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PassportConfiguratorV2__factory {
    return super.connect(runner) as PassportConfiguratorV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PassportConfiguratorV2Interface {
    return new Interface(_abi) as PassportConfiguratorV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PassportConfiguratorV2 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PassportConfiguratorV2;
  }
}
