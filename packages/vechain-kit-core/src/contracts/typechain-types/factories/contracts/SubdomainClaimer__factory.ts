/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
import {
    Contract,
    ContractFactory,
    ContractTransactionResponse,
    Interface,
} from 'ethers';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../common';
import type {
    SubdomainClaimer,
    SubdomainClaimerInterface,
} from '../../contracts/SubdomainClaimer';

const _abi = [
    {
        inputs: [],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'target',
                type: 'address',
            },
        ],
        name: 'AddressEmptyCode',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'implementation',
                type: 'address',
            },
        ],
        name: 'ERC1967InvalidImplementation',
        type: 'error',
    },
    {
        inputs: [],
        name: 'ERC1967NonPayable',
        type: 'error',
    },
    {
        inputs: [],
        name: 'FailedInnerCall',
        type: 'error',
    },
    {
        inputs: [],
        name: 'InvalidInitialization',
        type: 'error',
    },
    {
        inputs: [],
        name: 'NotInitializing',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'owner',
                type: 'address',
            },
        ],
        name: 'OwnableInvalidOwner',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'account',
                type: 'address',
            },
        ],
        name: 'OwnableUnauthorizedAccount',
        type: 'error',
    },
    {
        inputs: [],
        name: 'UUPSUnauthorizedCallContext',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: 'slot',
                type: 'bytes32',
            },
        ],
        name: 'UUPSUnsupportedProxiableUUID',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint64',
                name: 'version',
                type: 'uint64',
            },
        ],
        name: 'Initialized',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'nameHash',
                type: 'bytes32',
            },
            {
                indexed: false,
                internalType: 'string',
                name: 'domainName',
                type: 'string',
            },
            {
                indexed: true,
                internalType: 'bool',
                name: 'wasProtected',
                type: 'bool',
            },
            {
                indexed: true,
                internalType: 'bool',
                name: 'isProtected',
                type: 'bool',
            },
        ],
        name: 'ProtectedDomainUpdated',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'implementation',
                type: 'address',
            },
        ],
        name: 'Upgraded',
        type: 'event',
    },
    {
        inputs: [],
        name: 'UPGRADE_INTERFACE_VERSION',
        outputs: [
            {
                internalType: 'string',
                name: '',
                type: 'string',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'string',
                name: 'name',
                type: 'string',
            },
            {
                internalType: 'contract PublicResolver',
                name: 'resolver',
                type: 'address',
            },
        ],
        name: 'claim',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'domainName',
        outputs: [
            {
                internalType: 'string',
                name: '',
                type: 'string',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'ens',
        outputs: [
            {
                internalType: 'contract ENS',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'contract ENS',
                name: 'ensAddr',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'resolveUtilsAddress',
                type: 'address',
            },
            {
                internalType: 'string',
                name: '_domainName',
                type: 'string',
            },
        ],
        name: 'initialize',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'string',
                        name: 'name',
                        type: 'string',
                    },
                    {
                        internalType: 'bool',
                        name: 'isProtected',
                        type: 'bool',
                    },
                ],
                internalType: 'struct SubdomainClaimer.ProtectedDomain[]',
                name: '_protectedDomains',
                type: 'tuple[]',
            },
        ],
        name: 'initializeV2',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'string',
                name: 'name',
                type: 'string',
            },
        ],
        name: 'isDomainProtected',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'node',
        outputs: [
            {
                internalType: 'bytes32',
                name: '',
                type: 'bytes32',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'proxiableUUID',
        outputs: [
            {
                internalType: 'bytes32',
                name: '',
                type: 'bytes32',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'string',
                        name: 'name',
                        type: 'string',
                    },
                    {
                        internalType: 'bool',
                        name: 'isProtected',
                        type: 'bool',
                    },
                ],
                internalType: 'struct SubdomainClaimer.ProtectedDomain',
                name: '_protectedDomain',
                type: 'tuple',
            },
        ],
        name: 'updateProtectedDomains',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newImplementation',
                type: 'address',
            },
            {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
            },
        ],
        name: 'upgradeToAndCall',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'version',
        outputs: [
            {
                internalType: 'string',
                name: '',
                type: 'string',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
] as const;

const _bytecode =
    '0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100d4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d15780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051611e036100fd60003960008181610e4501528181610e6e0152610fb40152611e036000f3fe6080604052600436106100e85760003560e01c8063715018a61161008a578063ad3cb1cc11610059578063ad3cb1cc146102a4578063d70754ec146102d5578063ee4b4689146102eb578063f2fde38b1461030b57600080fd5b8063715018a6146101f5578063895d73861461020a5780638da5cb5b1461021f578063ac3d7f541461025c57600080fd5b80634f1ef286116100c65780634f1ef2861461016c57806352d1902d1461017f57806354fd4d50146101a257806360a1da83146101d557600080fd5b806310f36071146100ed5780633f15457f1461010f5780634571e3a61461014c575b600080fd5b3480156100f957600080fd5b5061010d610108366004611686565b61032b565b005b34801561011b57600080fd5b5060005461012f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561015857600080fd5b5061010d6101673660046116cf565b61033f565b61010d61017a366004611730565b61052a565b34801561018b57600080fd5b50610194610549565b604051908152602001610143565b3480156101ae57600080fd5b506040805180820190915260018152601960f91b60208201525b60405161014391906117b7565b3480156101e157600080fd5b5061010d6101f03660046117ea565b610566565b34801561020157600080fd5b5061010d6109fe565b34801561021657600080fd5b506101c8610a12565b34801561022b57600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031661012f565b34801561026857600080fd5b5061029461027736600461183b565b805160209182012060009081526004909152604090205460ff1690565b6040519015158152602001610143565b3480156102b057600080fd5b506101c8604051806040016040528060058152602001640352e302e360dc1b81525081565b3480156102e157600080fd5b5061019460025481565b3480156102f757600080fd5b5061010d610306366004611892565b610aa0565b34801561031757600080fd5b5061010d610326366004611942565b610c2f565b610333610c6a565b61033c81610cc5565b50565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03166000811580156103845750825b90506000826001600160401b031660011480156103a05750303b155b9050811580156103ae575080155b156103cc5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156103f657845460ff60401b1916600160401b1785555b6103ff33610d3b565b610407610d4c565b600080546001600160a01b03808b166001600160a01b03199283161790925560018054928a1692909116919091179055600361044387826119e7565b506104d7600380546104549061195f565b80601f01602080910402602001604051908101604052809291908181526020018280546104809061195f565b80156104cd5780601f106104a2576101008083540402835291602001916104cd565b820191906000526020600020905b8154815290600101906020018083116104b057829003601f168201915b5050505050610d54565b600255831561052057845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b610532610e3a565b61053b82610edf565b6105458282610ee7565b5050565b6000610553610fa9565b50600080516020611dae83398151915290565b60408051600180825281830190925260009160208083019080368337019050509050338160008151811061059c5761059c611aa6565b6001600160a01b0392831660209182029290920101526001546040516332fe2d9b60e21b8152600092919091169063cbf8b66c906105de908590600401611abc565b6000604051808303816000875af11580156105fd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106259190810190611b09565b9050600181511015801561065957506106578160008151811061064a5761064a611aa6565b6020026020010151610ff2565b155b6106c25760405162461bcd60e51b815260206004820152602f60248201527f4120646f6d61696e20697320616c7265616479206173736f636961746564207460448201526e37903cb7bab91030b2323932b9b99760891b60648201526084015b60405180910390fd5b83516020808601919091206000818152600490925260409091205485919060ff16156107305760405162461bcd60e51b815260206004820152601c60248201527f596f752063616e277420636c61696d207468697320646f6d61696e2e0000000060448201526064016106b9565b60008680519060200120905060006002548260405160200161075c929190918252602082015260400190565b60408051808303601f19018152908290528051602090910120600054631ef3fca760e31b8352600483018290529092506001600160a01b03169063f79fe53890602401602060405180830381865afa1580156107bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e09190611be8565b1561082d5760405162461bcd60e51b815260206004820152601a60248201527f537562646f6d61696e20616c726561647920636c61696d65642e00000000000060448201526064016106b9565b6000546002546040516306ab592360e01b81526004810191909152602481018490523060448201526001600160a01b03909116906306ab5923906064016020604051808303816000875af1158015610889573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ad9190611c05565b50600054604051630c4b7b8560e11b8152600481018390526001600160a01b03898116602483015290911690631896f70a90604401600060405180830381600087803b1580156108fc57600080fd5b505af1158015610910573d6000803e3d6000fd5b505060405162d5fa2b60e81b8152600481018490523360248201526001600160a01b038a16925063d5fa2b009150604401600060405180830381600087803b15801561095b57600080fd5b505af115801561096f573d6000803e3d6000fd5b50506000546002546040516306ab592360e01b81526004810191909152602481018690523360448201526001600160a01b0390911692506306ab592391506064016020604051808303816000875af11580156109cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f39190611c05565b505050505050505050565b610a06610c6a565b610a1060006110f5565b565b60038054610a1f9061195f565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4b9061195f565b8015610a985780601f10610a6d57610100808354040283529160200191610a98565b820191906000526020600020905b815481529060010190602001808311610a7b57829003601f168201915b505050505081565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805460029190600160401b900460ff1680610ae9575080546001600160401b03808416911610155b15610b075760405163f92ee8a960e01b815260040160405180910390fd5b805468ffffffffffffffffff19166001600160401b03831617600160401b1781558251610b9c5760405162461bcd60e51b815260206004820152603960248201527f50726f74656374656420646f6d61696e73206c697374206d757374206861766560448201527f206174206c65617374206120646f6d61696e20696e2069742e0000000000000060648201526084016106b9565b60005b8351811015610be2576000848281518110610bbc57610bbc611aa6565b60200260200101519050610bcf81610cc5565b5080610bda81611c34565b915050610b9f565b50805460ff60401b191681556040516001600160401b03831681527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050565b610c37610c6a565b6001600160a01b038116610c6157604051631e4fbdf760e01b8152600060048201526024016106b9565b61033c816110f5565b33610c9c7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610a105760405163118cdaa760e01b81523360048201526024016106b9565b80518051602091820120600081815260048352604090819020805493850151151560ff198516811790915584519151929360ff169290918315159185917f352f7b52d97f134295b792c020582db4d48c5fb624b07ef50c445fd11f4c3c8591610d2e91906117b7565b60405180910390a4505050565b610d43611166565b61033c816111af565b610a10611166565b600080610d888360408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b60408051808201825260018152601760f91b60208083019182528351808501855260008082529082018190528451808601865293518452838201929092528351808501909452818452830152919250610de28383836111b7565b505b805115610e32578051602082015120849060408051602081019390935282015260600160408051601f1981840301815291905280516020909101209350610e2c8383836111b7565b50610de4565b505050919050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610ec157507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610eb5600080516020611dae833981519152546001600160a01b031690565b6001600160a01b031614155b15610a105760405163703e46dd60e11b815260040160405180910390fd5b61033c610c6a565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610f41575060408051601f3d908101601f19168201909252610f3e91810190611c05565b60015b610f6957604051634c9c8ce360e01b81526001600160a01b03831660048201526024016106b9565b600080516020611dae8339815191528114610f9a57604051632a87526960e21b8152600481018290526024016106b9565b610fa48383611250565b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a105760405163703e46dd60e11b815260040160405180910390fd5b8051600090819081905b808210156110ec57600085838151811061101857611018611aa6565b01602001516001600160f81b0319169050600160ff1b81101561104757611040600184611c4d565b92506110d9565b600760fd1b6001600160f81b03198216101561106857611040600284611c4d565b600f60fc1b6001600160f81b03198216101561108957611040600384611c4d565b601f60fb1b6001600160f81b0319821610156110aa57611040600484611c4d565b603f60fa1b6001600160f81b0319821610156110cb57611040600584611c4d565b6110d6600684611c4d565b92505b50826110e481611c34565b935050610ffc565b50909392505050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610a1057604051631afcd79f60e31b815260040160405180910390fd5b610c37611166565b604080518082019091526000808252602082015260006111e985600001518660200151866000015187602001516112a6565b60208085018290528601519091506112019082611c60565b855161120d9190611c60565b8352602085015181036112235760008552611244565b835183516112319190611c4d565b85518690611240908390611c60565b9052505b829150505b9392505050565b611259826113b4565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561129e57610fa48282611419565b610545611491565b6000808584116113a7576020841161135357600060016112c7866020611c60565b6112d2906008611c73565b6112dd906002611d6e565b6112e79190611c60565b8451901991508116856112fa8989611c4d565b6113049190611c60565b805190935082165b81811461133e5787841161132657879450505050506113ac565b8361133081611d7a565b94505082845116905061130c565b6113488785611c4d565b9450505050506113ac565b8383206113608588611c60565b61136a9087611c4d565b91505b8582106113a557848220808203611392576113888684611c4d565b93505050506113ac565b61139d600184611c60565b92505061136d565b505b849150505b949350505050565b806001600160a01b03163b6000036113ea57604051634c9c8ce360e01b81526001600160a01b03821660048201526024016106b9565b600080516020611dae83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516114369190611d91565b600060405180830381855af49150503d8060008114611471576040519150601f19603f3d011682016040523d82523d6000602084013e611476565b606091505b50915091506114868583836114b0565b925050505b92915050565b3415610a105760405163b398979f60e01b815260040160405180910390fd5b6060826114c5576114c08261150c565b611249565b81511580156114dc57506001600160a01b0384163b155b1561150557604051639996b31560e01b81526001600160a01b03851660048201526024016106b9565b5080611249565b80511561151c5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561157357611573611535565b604052919050565b60006001600160401b0382111561159457611594611535565b50601f01601f191660200190565b60006115b56115b08461157b565b61154b565b90508281528383830111156115c957600080fd5b828260208301376000602084830101529392505050565b600082601f8301126115f157600080fd5b611249838335602085016115a2565b801515811461033c57600080fd5b60006040828403121561162057600080fd5b604051604081016001600160401b03828210818311171561164357611643611535565b81604052829350843591508082111561165b57600080fd5b50611668858286016115e0565b825250602083013561167981611600565b6020919091015292915050565b60006020828403121561169857600080fd5b81356001600160401b038111156116ae57600080fd5b6113ac8482850161160e565b6001600160a01b038116811461033c57600080fd5b6000806000606084860312156116e457600080fd5b83356116ef816116ba565b925060208401356116ff816116ba565b915060408401356001600160401b0381111561171a57600080fd5b611726868287016115e0565b9150509250925092565b6000806040838503121561174357600080fd5b823561174e816116ba565b915060208301356001600160401b0381111561176957600080fd5b8301601f8101851361177a57600080fd5b611789858235602084016115a2565b9150509250929050565b60005b838110156117ae578181015183820152602001611796565b50506000910152565b60208152600082518060208401526117d6816040850160208701611793565b601f01601f19169190910160400192915050565b600080604083850312156117fd57600080fd5b82356001600160401b0381111561181357600080fd5b61181f858286016115e0565b9250506020830135611830816116ba565b809150509250929050565b60006020828403121561184d57600080fd5b81356001600160401b0381111561186357600080fd5b6113ac848285016115e0565b60006001600160401b0382111561188857611888611535565b5060051b60200190565b600060208083850312156118a557600080fd5b82356001600160401b03808211156118bc57600080fd5b818501915085601f8301126118d057600080fd5b81356118de6115b08261186f565b81815260059190911b830184019084810190888311156118fd57600080fd5b8585015b83811015611935578035858111156119195760008081fd5b6119278b89838a010161160e565b845250918601918601611901565b5098975050505050505050565b60006020828403121561195457600080fd5b8135611249816116ba565b600181811c9082168061197357607f821691505b60208210810361199357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610fa457600081815260208120601f850160051c810160208610156119c05750805b601f850160051c820191505b818110156119df578281556001016119cc565b505050505050565b81516001600160401b03811115611a0057611a00611535565b611a1481611a0e845461195f565b84611999565b602080601f831160018114611a495760008415611a315750858301515b600019600386901b1c1916600185901b1785556119df565b600085815260208120601f198616915b82811015611a7857888601518255948401946001909101908401611a59565b5085821015611a965787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b81811015611afd5783516001600160a01b031683529284019291840191600101611ad8565b50909695505050505050565b60006020808385031215611b1c57600080fd5b82516001600160401b0380821115611b3357600080fd5b818501915085601f830112611b4757600080fd5b8151611b556115b08261186f565b81815260059190911b83018401908481019088831115611b7457600080fd5b8585015b8381101561193557805185811115611b905760008081fd5b8601603f81018b13611ba25760008081fd5b878101516040611bb46115b08361157b565b8281528d82848601011115611bc95760008081fd5b611bd8838c8301848701611793565b8652505050918601918601611b78565b600060208284031215611bfa57600080fd5b815161124981611600565b600060208284031215611c1757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600060018201611c4657611c46611c1e565b5060010190565b8082018082111561148b5761148b611c1e565b8181038181111561148b5761148b611c1e565b808202811582820484141761148b5761148b611c1e565b600181815b80851115611cc5578160001904821115611cab57611cab611c1e565b80851615611cb857918102915b93841c9390800290611c8f565b509250929050565b600082611cdc5750600161148b565b81611ce95750600061148b565b8160018114611cff5760028114611d0957611d25565b600191505061148b565b60ff841115611d1a57611d1a611c1e565b50506001821b61148b565b5060208310610133831016604e8410600b8410161715611d48575081810a61148b565b611d528383611c8a565b8060001904821115611d6657611d66611c1e565b029392505050565b60006112498383611ccd565b600081611d8957611d89611c1e565b506000190190565b60008251611da3818460208701611793565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220583f1c8bd657766f6cc527aa6d291b8014b8efc574882a4c8775a42239bc61dd64736f6c63430008140033';

type SubdomainClaimerConstructorParams =
    | [signer?: Signer]
    | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
    xs: SubdomainClaimerConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SubdomainClaimer__factory extends ContractFactory {
    constructor(...args: SubdomainClaimerConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
    }

    override getDeployTransaction(
        overrides?: NonPayableOverrides & { from?: string },
    ): Promise<ContractDeployTransaction> {
        return super.getDeployTransaction(overrides || {});
    }
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
        return super.deploy(overrides || {}) as Promise<
            SubdomainClaimer & {
                deploymentTransaction(): ContractTransactionResponse;
            }
        >;
    }
    override connect(runner: ContractRunner | null): SubdomainClaimer__factory {
        return super.connect(runner) as SubdomainClaimer__factory;
    }

    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): SubdomainClaimerInterface {
        return new Interface(_abi) as SubdomainClaimerInterface;
    }
    static connect(
        address: string,
        runner?: ContractRunner | null,
    ): SubdomainClaimer {
        return new Contract(
            address,
            _abi,
            runner,
        ) as unknown as SubdomainClaimer;
    }
}
