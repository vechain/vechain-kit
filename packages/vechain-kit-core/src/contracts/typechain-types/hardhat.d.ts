/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlUpgradeable__factory>;
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "TimelockControllerUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimelockControllerUpgradeable__factory>;
    getContractFactory(
      name: "VotesUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotesUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "UUPSUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSUpgradeable__factory>;
    getContractFactory(
      name: "ERC1155HolderUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155HolderUpgradeable__factory>;
    getContractFactory(
      name: "ERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Upgradeable__factory>;
    getContractFactory(
      name: "ERC20PausableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20PausableUpgradeable__factory>;
    getContractFactory(
      name: "ERC20PermitUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20PermitUpgradeable__factory>;
    getContractFactory(
      name: "ERC20VotesUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20VotesUpgradeable__factory>;
    getContractFactory(
      name: "ERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Upgradeable__factory>;
    getContractFactory(
      name: "ERC721BurnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721BurnableUpgradeable__factory>;
    getContractFactory(
      name: "ERC721EnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721EnumerableUpgradeable__factory>;
    getContractFactory(
      name: "ERC721PausableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721PausableUpgradeable__factory>;
    getContractFactory(
      name: "ERC721URIStorageUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URIStorageUpgradeable__factory>;
    getContractFactory(
      name: "ERC721HolderUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721HolderUpgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "EIP712Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712Upgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "NoncesUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NoncesUpgradeable__factory>;
    getContractFactory(
      name: "PausableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PausableUpgradeable__factory>;
    getContractFactory(
      name: "ReentrancyGuardUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IVotes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVotes__factory>;
    getContractFactory(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822Proxiable__factory>;
    getContractFactory(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Errors__factory>;
    getContractFactory(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Errors__factory>;
    getContractFactory(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Errors__factory>;
    getContractFactory(
      name: "IERC4906",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC4906__factory>;
    getContractFactory(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC5267__factory>;
    getContractFactory(
      name: "IERC5805",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC5805__factory>;
    getContractFactory(
      name: "IERC6372",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC6372__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "ERC1967Utils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Utils__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Capped",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Capped__factory>;
    getContractFactory(
      name: "ERC20Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Pausable__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "Address",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Address__factory>;
    getContractFactory(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ECDSA__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Math",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Math__factory>;
    getContractFactory(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCast__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "Strings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Strings__factory>;
    getContractFactory(
      name: "Checkpoints",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Checkpoints__factory>;
    getContractFactory(
      name: "DoubleEndedQueue",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DoubleEndedQueue__factory>;
    getContractFactory(
      name: "B3TR",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.B3TR__factory>;
    getContractFactory(
      name: "B3TRGovernor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.B3TRGovernor__factory>;
    getContractFactory(
      name: "B3TRProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.B3TRProxy__factory>;
    getContractFactory(
      name: "B3TRGovernorV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.B3TRGovernorV1__factory>;
    getContractFactory(
      name: "EmissionsV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EmissionsV1__factory>;
    getContractFactory(
      name: "GalaxyMemberV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GalaxyMemberV1__factory>;
    getContractFactory(
      name: "GovernorStorageV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorStorageV1__factory>;
    getContractFactory(
      name: "GovernorClockLogicV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorClockLogicV1__factory>;
    getContractFactory(
      name: "GovernorConfiguratorV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorConfiguratorV1__factory>;
    getContractFactory(
      name: "GovernorDepositLogicV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorDepositLogicV1__factory>;
    getContractFactory(
      name: "GovernorFunctionRestrictionsLogicV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorFunctionRestrictionsLogicV1__factory>;
    getContractFactory(
      name: "GovernorGovernanceLogicV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorGovernanceLogicV1__factory>;
    getContractFactory(
      name: "GovernorProposalLogicV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorProposalLogicV1__factory>;
    getContractFactory(
      name: "GovernorQuorumLogicV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorQuorumLogicV1__factory>;
    getContractFactory(
      name: "GovernorStateLogicV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorStateLogicV1__factory>;
    getContractFactory(
      name: "GovernorVotesLogicV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorVotesLogicV1__factory>;
    getContractFactory(
      name: "IB3TR",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IB3TR__factory>;
    getContractFactory(
      name: "IB3TRGovernorV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IB3TRGovernorV1__factory>;
    getContractFactory(
      name: "IEmissionsV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEmissionsV1__factory>;
    getContractFactory(
      name: "IGalaxyMemberV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGalaxyMemberV1__factory>;
    getContractFactory(
      name: "INodeManagementV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INodeManagementV1__factory>;
    getContractFactory(
      name: "IVeBetterPassportV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVeBetterPassportV1__factory>;
    getContractFactory(
      name: "IVoterRewardsV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVoterRewardsV1__factory>;
    getContractFactory(
      name: "IX2EarnAppsV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IX2EarnAppsV1__factory>;
    getContractFactory(
      name: "IX2EarnRewardsPoolV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IX2EarnRewardsPoolV1__factory>;
    getContractFactory(
      name: "IXAllocationPoolV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IXAllocationPoolV1__factory>;
    getContractFactory(
      name: "IXAllocationVotingGovernorV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IXAllocationVotingGovernorV1__factory>;
    getContractFactory(
      name: "NodeManagementV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NodeManagementV1__factory>;
    getContractFactory(
      name: "PassportChecksLogicV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportChecksLogicV1__factory>;
    getContractFactory(
      name: "PassportConfiguratorV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportConfiguratorV1__factory>;
    getContractFactory(
      name: "PassportDelegationLogicV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportDelegationLogicV1__factory>;
    getContractFactory(
      name: "PassportEntityLogicV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportEntityLogicV1__factory>;
    getContractFactory(
      name: "PassportPersonhoodLogicV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportPersonhoodLogicV1__factory>;
    getContractFactory(
      name: "PassportPoPScoreLogicV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportPoPScoreLogicV1__factory>;
    getContractFactory(
      name: "PassportSignalingLogicV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportSignalingLogicV1__factory>;
    getContractFactory(
      name: "PassportWhitelistAndBlacklistLogicV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportWhitelistAndBlacklistLogicV1__factory>;
    getContractFactory(
      name: "VeBetterPassportV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VeBetterPassportV1__factory>;
    getContractFactory(
      name: "VoterRewardsV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VoterRewardsV1__factory>;
    getContractFactory(
      name: "AdministrationUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdministrationUpgradeable__factory>;
    getContractFactory(
      name: "AppsStorageUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AppsStorageUpgradeable__factory>;
    getContractFactory(
      name: "ContractSettingsUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractSettingsUpgradeable__factory>;
    getContractFactory(
      name: "VoteEligibilityUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VoteEligibilityUpgradeable__factory>;
    getContractFactory(
      name: "X2EarnAppsUpgradeableV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.X2EarnAppsUpgradeableV1__factory>;
    getContractFactory(
      name: "ExternalContractsUpgradeableV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExternalContractsUpgradeableV1__factory>;
    getContractFactory(
      name: "RoundEarningsSettingsUpgradeableV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoundEarningsSettingsUpgradeableV1__factory>;
    getContractFactory(
      name: "RoundFinalizationUpgradeableV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoundFinalizationUpgradeableV1__factory>;
    getContractFactory(
      name: "RoundsStorageUpgradeableV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoundsStorageUpgradeableV1__factory>;
    getContractFactory(
      name: "RoundVotesCountingUpgradeableV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoundVotesCountingUpgradeableV1__factory>;
    getContractFactory(
      name: "VotesQuorumFractionUpgradeableV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotesQuorumFractionUpgradeableV1__factory>;
    getContractFactory(
      name: "VotesUpgradeableV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotesUpgradeableV1__factory>;
    getContractFactory(
      name: "VotingSettingsUpgradeableV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotingSettingsUpgradeableV1__factory>;
    getContractFactory(
      name: "XAllocationVotingGovernorV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XAllocationVotingGovernorV1__factory>;
    getContractFactory(
      name: "X2EarnAppsV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.X2EarnAppsV1__factory>;
    getContractFactory(
      name: "X2EarnRewardsPoolV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.X2EarnRewardsPoolV1__factory>;
    getContractFactory(
      name: "XAllocationPoolV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XAllocationPoolV1__factory>;
    getContractFactory(
      name: "XAllocationVotingV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XAllocationVotingV1__factory>;
    getContractFactory(
      name: "B3TRGovernorV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.B3TRGovernorV2__factory>;
    getContractFactory(
      name: "GalaxyMemberV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GalaxyMemberV2__factory>;
    getContractFactory(
      name: "IGalaxyMemberV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGalaxyMemberV2__factory>;
    getContractFactory(
      name: "IVeBetterPassportV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVeBetterPassportV2__factory>;
    getContractFactory(
      name: "IVoterRewardsV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVoterRewardsV2__factory>;
    getContractFactory(
      name: "IX2EarnAppsV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IX2EarnAppsV2__factory>;
    getContractFactory(
      name: "IX2EarnRewardsPoolV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IX2EarnRewardsPoolV2__factory>;
    getContractFactory(
      name: "IXAllocationPoolV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IXAllocationPoolV2__factory>;
    getContractFactory(
      name: "IXAllocationVotingGovernorV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IXAllocationVotingGovernorV2__factory>;
    getContractFactory(
      name: "PassportChecksLogicV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportChecksLogicV2__factory>;
    getContractFactory(
      name: "PassportConfiguratorV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportConfiguratorV2__factory>;
    getContractFactory(
      name: "PassportDelegationLogicV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportDelegationLogicV2__factory>;
    getContractFactory(
      name: "PassportEntityLogicV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportEntityLogicV2__factory>;
    getContractFactory(
      name: "PassportPersonhoodLogicV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportPersonhoodLogicV2__factory>;
    getContractFactory(
      name: "PassportPoPScoreLogicV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportPoPScoreLogicV2__factory>;
    getContractFactory(
      name: "PassportSignalingLogicV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportSignalingLogicV2__factory>;
    getContractFactory(
      name: "PassportWhitelistAndBlacklistLogicV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportWhitelistAndBlacklistLogicV2__factory>;
    getContractFactory(
      name: "VeBetterPassportV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VeBetterPassportV2__factory>;
    getContractFactory(
      name: "VoterRewardsV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VoterRewardsV2__factory>;
    getContractFactory(
      name: "AdministrationUtilsV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdministrationUtilsV2__factory>;
    getContractFactory(
      name: "AppStorageUtilsV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AppStorageUtilsV2__factory>;
    getContractFactory(
      name: "EndorsementUtilsV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EndorsementUtilsV2__factory>;
    getContractFactory(
      name: "VoteEligibilityUtilsV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VoteEligibilityUtilsV2__factory>;
    getContractFactory(
      name: "AdministrationUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdministrationUpgradeable__factory>;
    getContractFactory(
      name: "AppsStorageUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AppsStorageUpgradeable__factory>;
    getContractFactory(
      name: "ContractSettingsUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractSettingsUpgradeable__factory>;
    getContractFactory(
      name: "EndorsementUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EndorsementUpgradeable__factory>;
    getContractFactory(
      name: "VoteEligibilityUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VoteEligibilityUpgradeable__factory>;
    getContractFactory(
      name: "X2EarnAppsUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.X2EarnAppsUpgradeable__factory>;
    getContractFactory(
      name: "ExternalContractsUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExternalContractsUpgradeable__factory>;
    getContractFactory(
      name: "RoundEarningsSettingsUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoundEarningsSettingsUpgradeable__factory>;
    getContractFactory(
      name: "RoundFinalizationUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoundFinalizationUpgradeable__factory>;
    getContractFactory(
      name: "RoundsStorageUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoundsStorageUpgradeable__factory>;
    getContractFactory(
      name: "RoundVotesCountingUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoundVotesCountingUpgradeable__factory>;
    getContractFactory(
      name: "VotesQuorumFractionUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotesQuorumFractionUpgradeable__factory>;
    getContractFactory(
      name: "VotesUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotesUpgradeable__factory>;
    getContractFactory(
      name: "VotingSettingsUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotingSettingsUpgradeable__factory>;
    getContractFactory(
      name: "XAllocationVotingGovernor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XAllocationVotingGovernor__factory>;
    getContractFactory(
      name: "X2EarnAppsV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.X2EarnAppsV2__factory>;
    getContractFactory(
      name: "X2EarnRewardsPoolV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.X2EarnRewardsPoolV2__factory>;
    getContractFactory(
      name: "XAllocationPoolV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XAllocationPoolV2__factory>;
    getContractFactory(
      name: "XAllocationVotingV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XAllocationVotingV2__factory>;
    getContractFactory(
      name: "B3TRGovernorV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.B3TRGovernorV3__factory>;
    getContractFactory(
      name: "GovernorStorageV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorStorageV3__factory>;
    getContractFactory(
      name: "GovernorClockLogicV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorClockLogicV3__factory>;
    getContractFactory(
      name: "GovernorConfiguratorV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorConfiguratorV3__factory>;
    getContractFactory(
      name: "GovernorDepositLogicV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorDepositLogicV3__factory>;
    getContractFactory(
      name: "GovernorFunctionRestrictionsLogicV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorFunctionRestrictionsLogicV3__factory>;
    getContractFactory(
      name: "GovernorGovernanceLogicV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorGovernanceLogicV3__factory>;
    getContractFactory(
      name: "GovernorProposalLogicV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorProposalLogicV3__factory>;
    getContractFactory(
      name: "GovernorQuorumLogicV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorQuorumLogicV3__factory>;
    getContractFactory(
      name: "GovernorStateLogicV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorStateLogicV3__factory>;
    getContractFactory(
      name: "GovernorVotesLogicV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorVotesLogicV3__factory>;
    getContractFactory(
      name: "IB3TRGovernorV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IB3TRGovernorV3__factory>;
    getContractFactory(
      name: "IX2EarnRewardsPoolV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IX2EarnRewardsPoolV3__factory>;
    getContractFactory(
      name: "VoterRewardsV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VoterRewardsV3__factory>;
    getContractFactory(
      name: "ExternalContractsUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExternalContractsUpgradeable__factory>;
    getContractFactory(
      name: "RoundEarningsSettingsUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoundEarningsSettingsUpgradeable__factory>;
    getContractFactory(
      name: "RoundFinalizationUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoundFinalizationUpgradeable__factory>;
    getContractFactory(
      name: "RoundsStorageUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoundsStorageUpgradeable__factory>;
    getContractFactory(
      name: "RoundVotesCountingUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoundVotesCountingUpgradeable__factory>;
    getContractFactory(
      name: "VotesQuorumFractionUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotesQuorumFractionUpgradeable__factory>;
    getContractFactory(
      name: "VotesUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotesUpgradeable__factory>;
    getContractFactory(
      name: "VotingSettingsUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotingSettingsUpgradeable__factory>;
    getContractFactory(
      name: "XAllocationVotingGovernor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XAllocationVotingGovernor__factory>;
    getContractFactory(
      name: "X2EarnRewardsPoolV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.X2EarnRewardsPoolV3__factory>;
    getContractFactory(
      name: "XAllocationPoolV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XAllocationPoolV3__factory>;
    getContractFactory(
      name: "XAllocationVotingV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XAllocationVotingV3__factory>;
    getContractFactory(
      name: "B3TRGovernorV4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.B3TRGovernorV4__factory>;
    getContractFactory(
      name: "GovernorStorageV4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorStorageV4__factory>;
    getContractFactory(
      name: "GovernorClockLogicV4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorClockLogicV4__factory>;
    getContractFactory(
      name: "GovernorConfiguratorV4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorConfiguratorV4__factory>;
    getContractFactory(
      name: "GovernorDepositLogicV4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorDepositLogicV4__factory>;
    getContractFactory(
      name: "GovernorFunctionRestrictionsLogicV4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorFunctionRestrictionsLogicV4__factory>;
    getContractFactory(
      name: "GovernorGovernanceLogicV4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorGovernanceLogicV4__factory>;
    getContractFactory(
      name: "GovernorProposalLogicV4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorProposalLogicV4__factory>;
    getContractFactory(
      name: "GovernorQuorumLogicV4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorQuorumLogicV4__factory>;
    getContractFactory(
      name: "GovernorStateLogicV4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorStateLogicV4__factory>;
    getContractFactory(
      name: "GovernorVotesLogicV4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorVotesLogicV4__factory>;
    getContractFactory(
      name: "IB3TRGovernorV4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IB3TRGovernorV4__factory>;
    getContractFactory(
      name: "IX2EarnRewardsPoolV4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IX2EarnRewardsPoolV4__factory>;
    getContractFactory(
      name: "X2EarnRewardsPoolV4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.X2EarnRewardsPoolV4__factory>;
    getContractFactory(
      name: "Emissions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Emissions__factory>;
    getContractFactory(
      name: "GalaxyMember",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GalaxyMember__factory>;
    getContractFactory(
      name: "GovernorStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorStorage__factory>;
    getContractFactory(
      name: "GovernorClockLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorClockLogic__factory>;
    getContractFactory(
      name: "GovernorConfigurator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorConfigurator__factory>;
    getContractFactory(
      name: "GovernorDepositLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorDepositLogic__factory>;
    getContractFactory(
      name: "GovernorFunctionRestrictionsLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorFunctionRestrictionsLogic__factory>;
    getContractFactory(
      name: "GovernorGovernanceLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorGovernanceLogic__factory>;
    getContractFactory(
      name: "GovernorProposalLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorProposalLogic__factory>;
    getContractFactory(
      name: "GovernorQuorumLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorQuorumLogic__factory>;
    getContractFactory(
      name: "GovernorStateLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorStateLogic__factory>;
    getContractFactory(
      name: "GovernorVotesLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorVotesLogic__factory>;
    getContractFactory(
      name: "IB3TR",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IB3TR__factory>;
    getContractFactory(
      name: "IB3TRGovernor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IB3TRGovernor__factory>;
    getContractFactory(
      name: "IEmissions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEmissions__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IGalaxyMember",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGalaxyMember__factory>;
    getContractFactory(
      name: "INodeManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INodeManagement__factory>;
    getContractFactory(
      name: "ITokenAuction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenAuction__factory>;
    getContractFactory(
      name: "ITreasury",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITreasury__factory>;
    getContractFactory(
      name: "IVeBetterPassport",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVeBetterPassport__factory>;
    getContractFactory(
      name: "IVOT3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVOT3__factory>;
    getContractFactory(
      name: "IVoterRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVoterRewards__factory>;
    getContractFactory(
      name: "IX2EarnApps",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IX2EarnApps__factory>;
    getContractFactory(
      name: "IX2EarnCreator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IX2EarnCreator__factory>;
    getContractFactory(
      name: "IX2EarnRewardsPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IX2EarnRewardsPool__factory>;
    getContractFactory(
      name: "IXAllocationPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IXAllocationPool__factory>;
    getContractFactory(
      name: "IXAllocationVotingGovernor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IXAllocationVotingGovernor__factory>;
    getContractFactory(
      name: "MockERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockERC721Receiver__factory>;
    getContractFactory(
      name: "MyERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MyERC1155__factory>;
    getContractFactory(
      name: "MyERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MyERC721__factory>;
    getContractFactory(
      name: "ClockAuction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClockAuction__factory>;
    getContractFactory(
      name: "ClockAuctionBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClockAuctionBase__factory>;
    getContractFactory(
      name: "SupportsInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SupportsInterface__factory>;
    getContractFactory(
      name: "IEnergy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEnergy__factory>;
    getContractFactory(
      name: "ThunderFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ThunderFactory__factory>;
    getContractFactory(
      name: "TokenAuction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenAuction__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IVIP181",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVIP181__factory>;
    getContractFactory(
      name: "IVIP181Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVIP181Enumerable__factory>;
    getContractFactory(
      name: "IVIP181Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVIP181Metadata__factory>;
    getContractFactory(
      name: "IVIP181Basic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVIP181Basic__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "XAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XAccessControl__factory>;
    getContractFactory(
      name: "XOwnership",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XOwnership__factory>;
    getContractFactory(
      name: "NodeManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NodeManagement__factory>;
    getContractFactory(
      name: "BaseUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseUpgradeable__factory>;
    getContractFactory(
      name: "ModuleInitializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ModuleInitializable__factory>;
    getContractFactory(
      name: "TimeLock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimeLock__factory>;
    getContractFactory(
      name: "Treasury",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Treasury__factory>;
    getContractFactory(
      name: "PassportChecksLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportChecksLogic__factory>;
    getContractFactory(
      name: "PassportConfigurator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportConfigurator__factory>;
    getContractFactory(
      name: "PassportDelegationLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportDelegationLogic__factory>;
    getContractFactory(
      name: "PassportEntityLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportEntityLogic__factory>;
    getContractFactory(
      name: "PassportPersonhoodLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportPersonhoodLogic__factory>;
    getContractFactory(
      name: "PassportPoPScoreLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportPoPScoreLogic__factory>;
    getContractFactory(
      name: "PassportSignalingLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportSignalingLogic__factory>;
    getContractFactory(
      name: "PassportWhitelistAndBlacklistLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PassportWhitelistAndBlacklistLogic__factory>;
    getContractFactory(
      name: "VeBetterPassport",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VeBetterPassport__factory>;
    getContractFactory(
      name: "VOT3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VOT3__factory>;
    getContractFactory(
      name: "VoterRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VoterRewards__factory>;
    getContractFactory(
      name: "AdministrationUtils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdministrationUtils__factory>;
    getContractFactory(
      name: "AppStorageUtils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AppStorageUtils__factory>;
    getContractFactory(
      name: "EndorsementUtils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EndorsementUtils__factory>;
    getContractFactory(
      name: "VoteEligibilityUtils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VoteEligibilityUtils__factory>;
    getContractFactory(
      name: "AdministrationUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdministrationUpgradeable__factory>;
    getContractFactory(
      name: "AppsStorageUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AppsStorageUpgradeable__factory>;
    getContractFactory(
      name: "ContractSettingsUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractSettingsUpgradeable__factory>;
    getContractFactory(
      name: "EndorsementUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EndorsementUpgradeable__factory>;
    getContractFactory(
      name: "VoteEligibilityUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VoteEligibilityUpgradeable__factory>;
    getContractFactory(
      name: "X2EarnAppsUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.X2EarnAppsUpgradeable__factory>;
    getContractFactory(
      name: "ExternalContractsUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExternalContractsUpgradeable__factory>;
    getContractFactory(
      name: "RoundEarningsSettingsUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoundEarningsSettingsUpgradeable__factory>;
    getContractFactory(
      name: "RoundFinalizationUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoundFinalizationUpgradeable__factory>;
    getContractFactory(
      name: "RoundsStorageUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoundsStorageUpgradeable__factory>;
    getContractFactory(
      name: "RoundVotesCountingUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoundVotesCountingUpgradeable__factory>;
    getContractFactory(
      name: "VotesQuorumFractionUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotesQuorumFractionUpgradeable__factory>;
    getContractFactory(
      name: "VotesUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotesUpgradeable__factory>;
    getContractFactory(
      name: "VotingSettingsUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotingSettingsUpgradeable__factory>;
    getContractFactory(
      name: "XAllocationVotingGovernor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XAllocationVotingGovernor__factory>;
    getContractFactory(
      name: "X2EarnApps",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.X2EarnApps__factory>;
    getContractFactory(
      name: "X2EarnCreator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.X2EarnCreator__factory>;
    getContractFactory(
      name: "X2EarnRewardsPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.X2EarnRewardsPool__factory>;
    getContractFactory(
      name: "XAllocationPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XAllocationPool__factory>;
    getContractFactory(
      name: "XAllocationVoting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XAllocationVoting__factory>;

    getContractAt(
      name: "AccessControlUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlUpgradeable>;
    getContractAt(
      name: "OwnableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "TimelockControllerUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TimelockControllerUpgradeable>;
    getContractAt(
      name: "VotesUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VotesUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "UUPSUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSUpgradeable>;
    getContractAt(
      name: "ERC1155HolderUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155HolderUpgradeable>;
    getContractAt(
      name: "ERC20Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Upgradeable>;
    getContractAt(
      name: "ERC20PausableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20PausableUpgradeable>;
    getContractAt(
      name: "ERC20PermitUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20PermitUpgradeable>;
    getContractAt(
      name: "ERC20VotesUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20VotesUpgradeable>;
    getContractAt(
      name: "ERC721Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Upgradeable>;
    getContractAt(
      name: "ERC721BurnableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721BurnableUpgradeable>;
    getContractAt(
      name: "ERC721EnumerableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721EnumerableUpgradeable>;
    getContractAt(
      name: "ERC721PausableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721PausableUpgradeable>;
    getContractAt(
      name: "ERC721URIStorageUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721URIStorageUpgradeable>;
    getContractAt(
      name: "ERC721HolderUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721HolderUpgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "EIP712Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712Upgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "NoncesUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.NoncesUpgradeable>;
    getContractAt(
      name: "PausableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PausableUpgradeable>;
    getContractAt(
      name: "ReentrancyGuardUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    getContractAt(
      name: "AccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "IAccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IVotes",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IVotes>;
    getContractAt(
      name: "IERC1822Proxiable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822Proxiable>;
    getContractAt(
      name: "IERC1155Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Errors>;
    getContractAt(
      name: "IERC20Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Errors>;
    getContractAt(
      name: "IERC721Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Errors>;
    getContractAt(
      name: "IERC4906",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC4906>;
    getContractAt(
      name: "IERC5267",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC5267>;
    getContractAt(
      name: "IERC5805",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC5805>;
    getContractAt(
      name: "IERC6372",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC6372>;
    getContractAt(
      name: "IBeacon",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "ERC1967Utils",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Utils>;
    getContractAt(
      name: "Proxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "ERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Capped",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Capped>;
    getContractAt(
      name: "ERC20Pausable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Pausable>;
    getContractAt(
      name: "IERC20Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "Address",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Address>;
    getContractAt(
      name: "ECDSA",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ECDSA>;
    getContractAt(
      name: "ERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Math",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Math>;
    getContractAt(
      name: "SafeCast",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCast>;
    getContractAt(
      name: "Pausable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "Strings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Strings>;
    getContractAt(
      name: "Checkpoints",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Checkpoints>;
    getContractAt(
      name: "DoubleEndedQueue",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DoubleEndedQueue>;
    getContractAt(
      name: "B3TR",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.B3TR>;
    getContractAt(
      name: "B3TRGovernor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.B3TRGovernor>;
    getContractAt(
      name: "B3TRProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.B3TRProxy>;
    getContractAt(
      name: "B3TRGovernorV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.B3TRGovernorV1>;
    getContractAt(
      name: "EmissionsV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EmissionsV1>;
    getContractAt(
      name: "GalaxyMemberV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GalaxyMemberV1>;
    getContractAt(
      name: "GovernorStorageV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorStorageV1>;
    getContractAt(
      name: "GovernorClockLogicV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorClockLogicV1>;
    getContractAt(
      name: "GovernorConfiguratorV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorConfiguratorV1>;
    getContractAt(
      name: "GovernorDepositLogicV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorDepositLogicV1>;
    getContractAt(
      name: "GovernorFunctionRestrictionsLogicV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorFunctionRestrictionsLogicV1>;
    getContractAt(
      name: "GovernorGovernanceLogicV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorGovernanceLogicV1>;
    getContractAt(
      name: "GovernorProposalLogicV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorProposalLogicV1>;
    getContractAt(
      name: "GovernorQuorumLogicV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorQuorumLogicV1>;
    getContractAt(
      name: "GovernorStateLogicV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorStateLogicV1>;
    getContractAt(
      name: "GovernorVotesLogicV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorVotesLogicV1>;
    getContractAt(
      name: "IB3TR",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IB3TR>;
    getContractAt(
      name: "IB3TRGovernorV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IB3TRGovernorV1>;
    getContractAt(
      name: "IEmissionsV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IEmissionsV1>;
    getContractAt(
      name: "IGalaxyMemberV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IGalaxyMemberV1>;
    getContractAt(
      name: "INodeManagementV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.INodeManagementV1>;
    getContractAt(
      name: "IVeBetterPassportV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IVeBetterPassportV1>;
    getContractAt(
      name: "IVoterRewardsV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IVoterRewardsV1>;
    getContractAt(
      name: "IX2EarnAppsV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IX2EarnAppsV1>;
    getContractAt(
      name: "IX2EarnRewardsPoolV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IX2EarnRewardsPoolV1>;
    getContractAt(
      name: "IXAllocationPoolV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IXAllocationPoolV1>;
    getContractAt(
      name: "IXAllocationVotingGovernorV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IXAllocationVotingGovernorV1>;
    getContractAt(
      name: "NodeManagementV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.NodeManagementV1>;
    getContractAt(
      name: "PassportChecksLogicV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportChecksLogicV1>;
    getContractAt(
      name: "PassportConfiguratorV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportConfiguratorV1>;
    getContractAt(
      name: "PassportDelegationLogicV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportDelegationLogicV1>;
    getContractAt(
      name: "PassportEntityLogicV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportEntityLogicV1>;
    getContractAt(
      name: "PassportPersonhoodLogicV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportPersonhoodLogicV1>;
    getContractAt(
      name: "PassportPoPScoreLogicV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportPoPScoreLogicV1>;
    getContractAt(
      name: "PassportSignalingLogicV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportSignalingLogicV1>;
    getContractAt(
      name: "PassportWhitelistAndBlacklistLogicV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportWhitelistAndBlacklistLogicV1>;
    getContractAt(
      name: "VeBetterPassportV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VeBetterPassportV1>;
    getContractAt(
      name: "VoterRewardsV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VoterRewardsV1>;
    getContractAt(
      name: "AdministrationUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AdministrationUpgradeable>;
    getContractAt(
      name: "AppsStorageUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AppsStorageUpgradeable>;
    getContractAt(
      name: "ContractSettingsUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractSettingsUpgradeable>;
    getContractAt(
      name: "VoteEligibilityUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VoteEligibilityUpgradeable>;
    getContractAt(
      name: "X2EarnAppsUpgradeableV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.X2EarnAppsUpgradeableV1>;
    getContractAt(
      name: "ExternalContractsUpgradeableV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ExternalContractsUpgradeableV1>;
    getContractAt(
      name: "RoundEarningsSettingsUpgradeableV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoundEarningsSettingsUpgradeableV1>;
    getContractAt(
      name: "RoundFinalizationUpgradeableV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoundFinalizationUpgradeableV1>;
    getContractAt(
      name: "RoundsStorageUpgradeableV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoundsStorageUpgradeableV1>;
    getContractAt(
      name: "RoundVotesCountingUpgradeableV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoundVotesCountingUpgradeableV1>;
    getContractAt(
      name: "VotesQuorumFractionUpgradeableV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VotesQuorumFractionUpgradeableV1>;
    getContractAt(
      name: "VotesUpgradeableV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VotesUpgradeableV1>;
    getContractAt(
      name: "VotingSettingsUpgradeableV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VotingSettingsUpgradeableV1>;
    getContractAt(
      name: "XAllocationVotingGovernorV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.XAllocationVotingGovernorV1>;
    getContractAt(
      name: "X2EarnAppsV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.X2EarnAppsV1>;
    getContractAt(
      name: "X2EarnRewardsPoolV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.X2EarnRewardsPoolV1>;
    getContractAt(
      name: "XAllocationPoolV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.XAllocationPoolV1>;
    getContractAt(
      name: "XAllocationVotingV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.XAllocationVotingV1>;
    getContractAt(
      name: "B3TRGovernorV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.B3TRGovernorV2>;
    getContractAt(
      name: "GalaxyMemberV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GalaxyMemberV2>;
    getContractAt(
      name: "IGalaxyMemberV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IGalaxyMemberV2>;
    getContractAt(
      name: "IVeBetterPassportV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IVeBetterPassportV2>;
    getContractAt(
      name: "IVoterRewardsV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IVoterRewardsV2>;
    getContractAt(
      name: "IX2EarnAppsV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IX2EarnAppsV2>;
    getContractAt(
      name: "IX2EarnRewardsPoolV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IX2EarnRewardsPoolV2>;
    getContractAt(
      name: "IXAllocationPoolV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IXAllocationPoolV2>;
    getContractAt(
      name: "IXAllocationVotingGovernorV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IXAllocationVotingGovernorV2>;
    getContractAt(
      name: "PassportChecksLogicV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportChecksLogicV2>;
    getContractAt(
      name: "PassportConfiguratorV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportConfiguratorV2>;
    getContractAt(
      name: "PassportDelegationLogicV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportDelegationLogicV2>;
    getContractAt(
      name: "PassportEntityLogicV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportEntityLogicV2>;
    getContractAt(
      name: "PassportPersonhoodLogicV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportPersonhoodLogicV2>;
    getContractAt(
      name: "PassportPoPScoreLogicV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportPoPScoreLogicV2>;
    getContractAt(
      name: "PassportSignalingLogicV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportSignalingLogicV2>;
    getContractAt(
      name: "PassportWhitelistAndBlacklistLogicV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportWhitelistAndBlacklistLogicV2>;
    getContractAt(
      name: "VeBetterPassportV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VeBetterPassportV2>;
    getContractAt(
      name: "VoterRewardsV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VoterRewardsV2>;
    getContractAt(
      name: "AdministrationUtilsV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AdministrationUtilsV2>;
    getContractAt(
      name: "AppStorageUtilsV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AppStorageUtilsV2>;
    getContractAt(
      name: "EndorsementUtilsV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EndorsementUtilsV2>;
    getContractAt(
      name: "VoteEligibilityUtilsV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VoteEligibilityUtilsV2>;
    getContractAt(
      name: "AdministrationUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AdministrationUpgradeable>;
    getContractAt(
      name: "AppsStorageUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AppsStorageUpgradeable>;
    getContractAt(
      name: "ContractSettingsUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractSettingsUpgradeable>;
    getContractAt(
      name: "EndorsementUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EndorsementUpgradeable>;
    getContractAt(
      name: "VoteEligibilityUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VoteEligibilityUpgradeable>;
    getContractAt(
      name: "X2EarnAppsUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.X2EarnAppsUpgradeable>;
    getContractAt(
      name: "ExternalContractsUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ExternalContractsUpgradeable>;
    getContractAt(
      name: "RoundEarningsSettingsUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoundEarningsSettingsUpgradeable>;
    getContractAt(
      name: "RoundFinalizationUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoundFinalizationUpgradeable>;
    getContractAt(
      name: "RoundsStorageUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoundsStorageUpgradeable>;
    getContractAt(
      name: "RoundVotesCountingUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoundVotesCountingUpgradeable>;
    getContractAt(
      name: "VotesQuorumFractionUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VotesQuorumFractionUpgradeable>;
    getContractAt(
      name: "VotesUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VotesUpgradeable>;
    getContractAt(
      name: "VotingSettingsUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VotingSettingsUpgradeable>;
    getContractAt(
      name: "XAllocationVotingGovernor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.XAllocationVotingGovernor>;
    getContractAt(
      name: "X2EarnAppsV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.X2EarnAppsV2>;
    getContractAt(
      name: "X2EarnRewardsPoolV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.X2EarnRewardsPoolV2>;
    getContractAt(
      name: "XAllocationPoolV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.XAllocationPoolV2>;
    getContractAt(
      name: "XAllocationVotingV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.XAllocationVotingV2>;
    getContractAt(
      name: "B3TRGovernorV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.B3TRGovernorV3>;
    getContractAt(
      name: "GovernorStorageV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorStorageV3>;
    getContractAt(
      name: "GovernorClockLogicV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorClockLogicV3>;
    getContractAt(
      name: "GovernorConfiguratorV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorConfiguratorV3>;
    getContractAt(
      name: "GovernorDepositLogicV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorDepositLogicV3>;
    getContractAt(
      name: "GovernorFunctionRestrictionsLogicV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorFunctionRestrictionsLogicV3>;
    getContractAt(
      name: "GovernorGovernanceLogicV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorGovernanceLogicV3>;
    getContractAt(
      name: "GovernorProposalLogicV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorProposalLogicV3>;
    getContractAt(
      name: "GovernorQuorumLogicV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorQuorumLogicV3>;
    getContractAt(
      name: "GovernorStateLogicV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorStateLogicV3>;
    getContractAt(
      name: "GovernorVotesLogicV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorVotesLogicV3>;
    getContractAt(
      name: "IB3TRGovernorV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IB3TRGovernorV3>;
    getContractAt(
      name: "IX2EarnRewardsPoolV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IX2EarnRewardsPoolV3>;
    getContractAt(
      name: "VoterRewardsV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VoterRewardsV3>;
    getContractAt(
      name: "ExternalContractsUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ExternalContractsUpgradeable>;
    getContractAt(
      name: "RoundEarningsSettingsUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoundEarningsSettingsUpgradeable>;
    getContractAt(
      name: "RoundFinalizationUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoundFinalizationUpgradeable>;
    getContractAt(
      name: "RoundsStorageUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoundsStorageUpgradeable>;
    getContractAt(
      name: "RoundVotesCountingUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoundVotesCountingUpgradeable>;
    getContractAt(
      name: "VotesQuorumFractionUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VotesQuorumFractionUpgradeable>;
    getContractAt(
      name: "VotesUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VotesUpgradeable>;
    getContractAt(
      name: "VotingSettingsUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VotingSettingsUpgradeable>;
    getContractAt(
      name: "XAllocationVotingGovernor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.XAllocationVotingGovernor>;
    getContractAt(
      name: "X2EarnRewardsPoolV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.X2EarnRewardsPoolV3>;
    getContractAt(
      name: "XAllocationPoolV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.XAllocationPoolV3>;
    getContractAt(
      name: "XAllocationVotingV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.XAllocationVotingV3>;
    getContractAt(
      name: "B3TRGovernorV4",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.B3TRGovernorV4>;
    getContractAt(
      name: "GovernorStorageV4",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorStorageV4>;
    getContractAt(
      name: "GovernorClockLogicV4",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorClockLogicV4>;
    getContractAt(
      name: "GovernorConfiguratorV4",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorConfiguratorV4>;
    getContractAt(
      name: "GovernorDepositLogicV4",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorDepositLogicV4>;
    getContractAt(
      name: "GovernorFunctionRestrictionsLogicV4",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorFunctionRestrictionsLogicV4>;
    getContractAt(
      name: "GovernorGovernanceLogicV4",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorGovernanceLogicV4>;
    getContractAt(
      name: "GovernorProposalLogicV4",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorProposalLogicV4>;
    getContractAt(
      name: "GovernorQuorumLogicV4",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorQuorumLogicV4>;
    getContractAt(
      name: "GovernorStateLogicV4",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorStateLogicV4>;
    getContractAt(
      name: "GovernorVotesLogicV4",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorVotesLogicV4>;
    getContractAt(
      name: "IB3TRGovernorV4",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IB3TRGovernorV4>;
    getContractAt(
      name: "IX2EarnRewardsPoolV4",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IX2EarnRewardsPoolV4>;
    getContractAt(
      name: "X2EarnRewardsPoolV4",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.X2EarnRewardsPoolV4>;
    getContractAt(
      name: "Emissions",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Emissions>;
    getContractAt(
      name: "GalaxyMember",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GalaxyMember>;
    getContractAt(
      name: "GovernorStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorStorage>;
    getContractAt(
      name: "GovernorClockLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorClockLogic>;
    getContractAt(
      name: "GovernorConfigurator",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorConfigurator>;
    getContractAt(
      name: "GovernorDepositLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorDepositLogic>;
    getContractAt(
      name: "GovernorFunctionRestrictionsLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorFunctionRestrictionsLogic>;
    getContractAt(
      name: "GovernorGovernanceLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorGovernanceLogic>;
    getContractAt(
      name: "GovernorProposalLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorProposalLogic>;
    getContractAt(
      name: "GovernorQuorumLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorQuorumLogic>;
    getContractAt(
      name: "GovernorStateLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorStateLogic>;
    getContractAt(
      name: "GovernorVotesLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorVotesLogic>;
    getContractAt(
      name: "IB3TR",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IB3TR>;
    getContractAt(
      name: "IB3TRGovernor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IB3TRGovernor>;
    getContractAt(
      name: "IEmissions",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IEmissions>;
    getContractAt(
      name: "IERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IGalaxyMember",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IGalaxyMember>;
    getContractAt(
      name: "INodeManagement",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.INodeManagement>;
    getContractAt(
      name: "ITokenAuction",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenAuction>;
    getContractAt(
      name: "ITreasury",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ITreasury>;
    getContractAt(
      name: "IVeBetterPassport",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IVeBetterPassport>;
    getContractAt(
      name: "IVOT3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IVOT3>;
    getContractAt(
      name: "IVoterRewards",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IVoterRewards>;
    getContractAt(
      name: "IX2EarnApps",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IX2EarnApps>;
    getContractAt(
      name: "IX2EarnCreator",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IX2EarnCreator>;
    getContractAt(
      name: "IX2EarnRewardsPool",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IX2EarnRewardsPool>;
    getContractAt(
      name: "IXAllocationPool",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IXAllocationPool>;
    getContractAt(
      name: "IXAllocationVotingGovernor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IXAllocationVotingGovernor>;
    getContractAt(
      name: "MockERC721Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MockERC721Receiver>;
    getContractAt(
      name: "MyERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MyERC1155>;
    getContractAt(
      name: "MyERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MyERC721>;
    getContractAt(
      name: "ClockAuction",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ClockAuction>;
    getContractAt(
      name: "ClockAuctionBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ClockAuctionBase>;
    getContractAt(
      name: "SupportsInterface",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SupportsInterface>;
    getContractAt(
      name: "IEnergy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IEnergy>;
    getContractAt(
      name: "ThunderFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ThunderFactory>;
    getContractAt(
      name: "TokenAuction",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenAuction>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IVIP181",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IVIP181>;
    getContractAt(
      name: "IVIP181Enumerable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IVIP181Enumerable>;
    getContractAt(
      name: "IVIP181Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IVIP181Metadata>;
    getContractAt(
      name: "IVIP181Basic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IVIP181Basic>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Pausable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "XAccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.XAccessControl>;
    getContractAt(
      name: "XOwnership",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.XOwnership>;
    getContractAt(
      name: "NodeManagement",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.NodeManagement>;
    getContractAt(
      name: "BaseUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseUpgradeable>;
    getContractAt(
      name: "ModuleInitializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ModuleInitializable>;
    getContractAt(
      name: "TimeLock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TimeLock>;
    getContractAt(
      name: "Treasury",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Treasury>;
    getContractAt(
      name: "PassportChecksLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportChecksLogic>;
    getContractAt(
      name: "PassportConfigurator",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportConfigurator>;
    getContractAt(
      name: "PassportDelegationLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportDelegationLogic>;
    getContractAt(
      name: "PassportEntityLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportEntityLogic>;
    getContractAt(
      name: "PassportPersonhoodLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportPersonhoodLogic>;
    getContractAt(
      name: "PassportPoPScoreLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportPoPScoreLogic>;
    getContractAt(
      name: "PassportSignalingLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportSignalingLogic>;
    getContractAt(
      name: "PassportWhitelistAndBlacklistLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PassportWhitelistAndBlacklistLogic>;
    getContractAt(
      name: "VeBetterPassport",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VeBetterPassport>;
    getContractAt(
      name: "VOT3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VOT3>;
    getContractAt(
      name: "VoterRewards",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VoterRewards>;
    getContractAt(
      name: "AdministrationUtils",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AdministrationUtils>;
    getContractAt(
      name: "AppStorageUtils",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AppStorageUtils>;
    getContractAt(
      name: "EndorsementUtils",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EndorsementUtils>;
    getContractAt(
      name: "VoteEligibilityUtils",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VoteEligibilityUtils>;
    getContractAt(
      name: "AdministrationUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AdministrationUpgradeable>;
    getContractAt(
      name: "AppsStorageUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AppsStorageUpgradeable>;
    getContractAt(
      name: "ContractSettingsUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractSettingsUpgradeable>;
    getContractAt(
      name: "EndorsementUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EndorsementUpgradeable>;
    getContractAt(
      name: "VoteEligibilityUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VoteEligibilityUpgradeable>;
    getContractAt(
      name: "X2EarnAppsUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.X2EarnAppsUpgradeable>;
    getContractAt(
      name: "ExternalContractsUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ExternalContractsUpgradeable>;
    getContractAt(
      name: "RoundEarningsSettingsUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoundEarningsSettingsUpgradeable>;
    getContractAt(
      name: "RoundFinalizationUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoundFinalizationUpgradeable>;
    getContractAt(
      name: "RoundsStorageUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoundsStorageUpgradeable>;
    getContractAt(
      name: "RoundVotesCountingUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoundVotesCountingUpgradeable>;
    getContractAt(
      name: "VotesQuorumFractionUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VotesQuorumFractionUpgradeable>;
    getContractAt(
      name: "VotesUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VotesUpgradeable>;
    getContractAt(
      name: "VotingSettingsUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VotingSettingsUpgradeable>;
    getContractAt(
      name: "XAllocationVotingGovernor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.XAllocationVotingGovernor>;
    getContractAt(
      name: "X2EarnApps",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.X2EarnApps>;
    getContractAt(
      name: "X2EarnCreator",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.X2EarnCreator>;
    getContractAt(
      name: "X2EarnRewardsPool",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.X2EarnRewardsPool>;
    getContractAt(
      name: "XAllocationPool",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.XAllocationPool>;
    getContractAt(
      name: "XAllocationVoting",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.XAllocationVoting>;

    deployContract(
      name: "AccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControlUpgradeable>;
    deployContract(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnableUpgradeable>;
    deployContract(
      name: "TimelockControllerUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TimelockControllerUpgradeable>;
    deployContract(
      name: "VotesUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotesUpgradeable>;
    deployContract(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "UUPSUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UUPSUpgradeable>;
    deployContract(
      name: "ERC1155HolderUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155HolderUpgradeable>;
    deployContract(
      name: "ERC20Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Upgradeable>;
    deployContract(
      name: "ERC20PausableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20PausableUpgradeable>;
    deployContract(
      name: "ERC20PermitUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20PermitUpgradeable>;
    deployContract(
      name: "ERC20VotesUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20VotesUpgradeable>;
    deployContract(
      name: "ERC721Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Upgradeable>;
    deployContract(
      name: "ERC721BurnableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721BurnableUpgradeable>;
    deployContract(
      name: "ERC721EnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721EnumerableUpgradeable>;
    deployContract(
      name: "ERC721PausableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721PausableUpgradeable>;
    deployContract(
      name: "ERC721URIStorageUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721URIStorageUpgradeable>;
    deployContract(
      name: "ERC721HolderUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721HolderUpgradeable>;
    deployContract(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContextUpgradeable>;
    deployContract(
      name: "EIP712Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712Upgradeable>;
    deployContract(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165Upgradeable>;
    deployContract(
      name: "NoncesUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.NoncesUpgradeable>;
    deployContract(
      name: "PausableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PausableUpgradeable>;
    deployContract(
      name: "ReentrancyGuardUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    deployContract(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControl>;
    deployContract(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IVotes",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVotes>;
    deployContract(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1822Proxiable>;
    deployContract(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "IERC4906",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC4906>;
    deployContract(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267>;
    deployContract(
      name: "IERC5805",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5805>;
    deployContract(
      name: "IERC6372",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC6372>;
    deployContract(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBeacon>;
    deployContract(
      name: "ERC1967Utils",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1967Utils>;
    deployContract(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Proxy>;
    deployContract(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155>;
    deployContract(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155MetadataURI>;
    deployContract(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "ERC20Capped",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Capped>;
    deployContract(
      name: "ERC20Pausable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Pausable>;
    deployContract(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721>;
    deployContract(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Enumerable>;
    deployContract(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Metadata>;
    deployContract(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "Address",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Address>;
    deployContract(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECDSA>;
    deployContract(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "Math",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Math>;
    deployContract(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pausable>;
    deployContract(
      name: "Strings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "Checkpoints",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Checkpoints>;
    deployContract(
      name: "DoubleEndedQueue",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DoubleEndedQueue>;
    deployContract(
      name: "B3TR",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.B3TR>;
    deployContract(
      name: "B3TRGovernor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.B3TRGovernor>;
    deployContract(
      name: "B3TRProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.B3TRProxy>;
    deployContract(
      name: "B3TRGovernorV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.B3TRGovernorV1>;
    deployContract(
      name: "EmissionsV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EmissionsV1>;
    deployContract(
      name: "GalaxyMemberV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GalaxyMemberV1>;
    deployContract(
      name: "GovernorStorageV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorStorageV1>;
    deployContract(
      name: "GovernorClockLogicV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorClockLogicV1>;
    deployContract(
      name: "GovernorConfiguratorV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorConfiguratorV1>;
    deployContract(
      name: "GovernorDepositLogicV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorDepositLogicV1>;
    deployContract(
      name: "GovernorFunctionRestrictionsLogicV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorFunctionRestrictionsLogicV1>;
    deployContract(
      name: "GovernorGovernanceLogicV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorGovernanceLogicV1>;
    deployContract(
      name: "GovernorProposalLogicV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorProposalLogicV1>;
    deployContract(
      name: "GovernorQuorumLogicV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorQuorumLogicV1>;
    deployContract(
      name: "GovernorStateLogicV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorStateLogicV1>;
    deployContract(
      name: "GovernorVotesLogicV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorVotesLogicV1>;
    deployContract(
      name: "IB3TR",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IB3TR>;
    deployContract(
      name: "IB3TRGovernorV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IB3TRGovernorV1>;
    deployContract(
      name: "IEmissionsV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEmissionsV1>;
    deployContract(
      name: "IGalaxyMemberV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGalaxyMemberV1>;
    deployContract(
      name: "INodeManagementV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.INodeManagementV1>;
    deployContract(
      name: "IVeBetterPassportV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVeBetterPassportV1>;
    deployContract(
      name: "IVoterRewardsV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVoterRewardsV1>;
    deployContract(
      name: "IX2EarnAppsV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IX2EarnAppsV1>;
    deployContract(
      name: "IX2EarnRewardsPoolV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IX2EarnRewardsPoolV1>;
    deployContract(
      name: "IXAllocationPoolV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXAllocationPoolV1>;
    deployContract(
      name: "IXAllocationVotingGovernorV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXAllocationVotingGovernorV1>;
    deployContract(
      name: "NodeManagementV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.NodeManagementV1>;
    deployContract(
      name: "PassportChecksLogicV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportChecksLogicV1>;
    deployContract(
      name: "PassportConfiguratorV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportConfiguratorV1>;
    deployContract(
      name: "PassportDelegationLogicV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportDelegationLogicV1>;
    deployContract(
      name: "PassportEntityLogicV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportEntityLogicV1>;
    deployContract(
      name: "PassportPersonhoodLogicV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportPersonhoodLogicV1>;
    deployContract(
      name: "PassportPoPScoreLogicV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportPoPScoreLogicV1>;
    deployContract(
      name: "PassportSignalingLogicV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportSignalingLogicV1>;
    deployContract(
      name: "PassportWhitelistAndBlacklistLogicV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportWhitelistAndBlacklistLogicV1>;
    deployContract(
      name: "VeBetterPassportV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VeBetterPassportV1>;
    deployContract(
      name: "VoterRewardsV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VoterRewardsV1>;
    deployContract(
      name: "AdministrationUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AdministrationUpgradeable>;
    deployContract(
      name: "AppsStorageUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AppsStorageUpgradeable>;
    deployContract(
      name: "ContractSettingsUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractSettingsUpgradeable>;
    deployContract(
      name: "VoteEligibilityUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VoteEligibilityUpgradeable>;
    deployContract(
      name: "X2EarnAppsUpgradeableV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnAppsUpgradeableV1>;
    deployContract(
      name: "ExternalContractsUpgradeableV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ExternalContractsUpgradeableV1>;
    deployContract(
      name: "RoundEarningsSettingsUpgradeableV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundEarningsSettingsUpgradeableV1>;
    deployContract(
      name: "RoundFinalizationUpgradeableV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundFinalizationUpgradeableV1>;
    deployContract(
      name: "RoundsStorageUpgradeableV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundsStorageUpgradeableV1>;
    deployContract(
      name: "RoundVotesCountingUpgradeableV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundVotesCountingUpgradeableV1>;
    deployContract(
      name: "VotesQuorumFractionUpgradeableV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotesQuorumFractionUpgradeableV1>;
    deployContract(
      name: "VotesUpgradeableV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotesUpgradeableV1>;
    deployContract(
      name: "VotingSettingsUpgradeableV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotingSettingsUpgradeableV1>;
    deployContract(
      name: "XAllocationVotingGovernorV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationVotingGovernorV1>;
    deployContract(
      name: "X2EarnAppsV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnAppsV1>;
    deployContract(
      name: "X2EarnRewardsPoolV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnRewardsPoolV1>;
    deployContract(
      name: "XAllocationPoolV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationPoolV1>;
    deployContract(
      name: "XAllocationVotingV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationVotingV1>;
    deployContract(
      name: "B3TRGovernorV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.B3TRGovernorV2>;
    deployContract(
      name: "GalaxyMemberV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GalaxyMemberV2>;
    deployContract(
      name: "IGalaxyMemberV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGalaxyMemberV2>;
    deployContract(
      name: "IVeBetterPassportV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVeBetterPassportV2>;
    deployContract(
      name: "IVoterRewardsV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVoterRewardsV2>;
    deployContract(
      name: "IX2EarnAppsV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IX2EarnAppsV2>;
    deployContract(
      name: "IX2EarnRewardsPoolV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IX2EarnRewardsPoolV2>;
    deployContract(
      name: "IXAllocationPoolV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXAllocationPoolV2>;
    deployContract(
      name: "IXAllocationVotingGovernorV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXAllocationVotingGovernorV2>;
    deployContract(
      name: "PassportChecksLogicV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportChecksLogicV2>;
    deployContract(
      name: "PassportConfiguratorV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportConfiguratorV2>;
    deployContract(
      name: "PassportDelegationLogicV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportDelegationLogicV2>;
    deployContract(
      name: "PassportEntityLogicV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportEntityLogicV2>;
    deployContract(
      name: "PassportPersonhoodLogicV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportPersonhoodLogicV2>;
    deployContract(
      name: "PassportPoPScoreLogicV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportPoPScoreLogicV2>;
    deployContract(
      name: "PassportSignalingLogicV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportSignalingLogicV2>;
    deployContract(
      name: "PassportWhitelistAndBlacklistLogicV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportWhitelistAndBlacklistLogicV2>;
    deployContract(
      name: "VeBetterPassportV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VeBetterPassportV2>;
    deployContract(
      name: "VoterRewardsV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VoterRewardsV2>;
    deployContract(
      name: "AdministrationUtilsV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AdministrationUtilsV2>;
    deployContract(
      name: "AppStorageUtilsV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AppStorageUtilsV2>;
    deployContract(
      name: "EndorsementUtilsV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EndorsementUtilsV2>;
    deployContract(
      name: "VoteEligibilityUtilsV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VoteEligibilityUtilsV2>;
    deployContract(
      name: "AdministrationUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AdministrationUpgradeable>;
    deployContract(
      name: "AppsStorageUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AppsStorageUpgradeable>;
    deployContract(
      name: "ContractSettingsUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractSettingsUpgradeable>;
    deployContract(
      name: "EndorsementUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EndorsementUpgradeable>;
    deployContract(
      name: "VoteEligibilityUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VoteEligibilityUpgradeable>;
    deployContract(
      name: "X2EarnAppsUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnAppsUpgradeable>;
    deployContract(
      name: "ExternalContractsUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ExternalContractsUpgradeable>;
    deployContract(
      name: "RoundEarningsSettingsUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundEarningsSettingsUpgradeable>;
    deployContract(
      name: "RoundFinalizationUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundFinalizationUpgradeable>;
    deployContract(
      name: "RoundsStorageUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundsStorageUpgradeable>;
    deployContract(
      name: "RoundVotesCountingUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundVotesCountingUpgradeable>;
    deployContract(
      name: "VotesQuorumFractionUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotesQuorumFractionUpgradeable>;
    deployContract(
      name: "VotesUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotesUpgradeable>;
    deployContract(
      name: "VotingSettingsUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotingSettingsUpgradeable>;
    deployContract(
      name: "XAllocationVotingGovernor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationVotingGovernor>;
    deployContract(
      name: "X2EarnAppsV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnAppsV2>;
    deployContract(
      name: "X2EarnRewardsPoolV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnRewardsPoolV2>;
    deployContract(
      name: "XAllocationPoolV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationPoolV2>;
    deployContract(
      name: "XAllocationVotingV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationVotingV2>;
    deployContract(
      name: "B3TRGovernorV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.B3TRGovernorV3>;
    deployContract(
      name: "GovernorStorageV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorStorageV3>;
    deployContract(
      name: "GovernorClockLogicV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorClockLogicV3>;
    deployContract(
      name: "GovernorConfiguratorV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorConfiguratorV3>;
    deployContract(
      name: "GovernorDepositLogicV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorDepositLogicV3>;
    deployContract(
      name: "GovernorFunctionRestrictionsLogicV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorFunctionRestrictionsLogicV3>;
    deployContract(
      name: "GovernorGovernanceLogicV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorGovernanceLogicV3>;
    deployContract(
      name: "GovernorProposalLogicV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorProposalLogicV3>;
    deployContract(
      name: "GovernorQuorumLogicV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorQuorumLogicV3>;
    deployContract(
      name: "GovernorStateLogicV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorStateLogicV3>;
    deployContract(
      name: "GovernorVotesLogicV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorVotesLogicV3>;
    deployContract(
      name: "IB3TRGovernorV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IB3TRGovernorV3>;
    deployContract(
      name: "IX2EarnRewardsPoolV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IX2EarnRewardsPoolV3>;
    deployContract(
      name: "VoterRewardsV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VoterRewardsV3>;
    deployContract(
      name: "ExternalContractsUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ExternalContractsUpgradeable>;
    deployContract(
      name: "RoundEarningsSettingsUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundEarningsSettingsUpgradeable>;
    deployContract(
      name: "RoundFinalizationUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundFinalizationUpgradeable>;
    deployContract(
      name: "RoundsStorageUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundsStorageUpgradeable>;
    deployContract(
      name: "RoundVotesCountingUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundVotesCountingUpgradeable>;
    deployContract(
      name: "VotesQuorumFractionUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotesQuorumFractionUpgradeable>;
    deployContract(
      name: "VotesUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotesUpgradeable>;
    deployContract(
      name: "VotingSettingsUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotingSettingsUpgradeable>;
    deployContract(
      name: "XAllocationVotingGovernor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationVotingGovernor>;
    deployContract(
      name: "X2EarnRewardsPoolV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnRewardsPoolV3>;
    deployContract(
      name: "XAllocationPoolV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationPoolV3>;
    deployContract(
      name: "XAllocationVotingV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationVotingV3>;
    deployContract(
      name: "B3TRGovernorV4",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.B3TRGovernorV4>;
    deployContract(
      name: "GovernorStorageV4",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorStorageV4>;
    deployContract(
      name: "GovernorClockLogicV4",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorClockLogicV4>;
    deployContract(
      name: "GovernorConfiguratorV4",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorConfiguratorV4>;
    deployContract(
      name: "GovernorDepositLogicV4",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorDepositLogicV4>;
    deployContract(
      name: "GovernorFunctionRestrictionsLogicV4",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorFunctionRestrictionsLogicV4>;
    deployContract(
      name: "GovernorGovernanceLogicV4",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorGovernanceLogicV4>;
    deployContract(
      name: "GovernorProposalLogicV4",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorProposalLogicV4>;
    deployContract(
      name: "GovernorQuorumLogicV4",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorQuorumLogicV4>;
    deployContract(
      name: "GovernorStateLogicV4",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorStateLogicV4>;
    deployContract(
      name: "GovernorVotesLogicV4",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorVotesLogicV4>;
    deployContract(
      name: "IB3TRGovernorV4",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IB3TRGovernorV4>;
    deployContract(
      name: "IX2EarnRewardsPoolV4",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IX2EarnRewardsPoolV4>;
    deployContract(
      name: "X2EarnRewardsPoolV4",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnRewardsPoolV4>;
    deployContract(
      name: "Emissions",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Emissions>;
    deployContract(
      name: "GalaxyMember",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GalaxyMember>;
    deployContract(
      name: "GovernorStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorStorage>;
    deployContract(
      name: "GovernorClockLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorClockLogic>;
    deployContract(
      name: "GovernorConfigurator",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorConfigurator>;
    deployContract(
      name: "GovernorDepositLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorDepositLogic>;
    deployContract(
      name: "GovernorFunctionRestrictionsLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorFunctionRestrictionsLogic>;
    deployContract(
      name: "GovernorGovernanceLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorGovernanceLogic>;
    deployContract(
      name: "GovernorProposalLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorProposalLogic>;
    deployContract(
      name: "GovernorQuorumLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorQuorumLogic>;
    deployContract(
      name: "GovernorStateLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorStateLogic>;
    deployContract(
      name: "GovernorVotesLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorVotesLogic>;
    deployContract(
      name: "IB3TR",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IB3TR>;
    deployContract(
      name: "IB3TRGovernor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IB3TRGovernor>;
    deployContract(
      name: "IEmissions",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEmissions>;
    deployContract(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IGalaxyMember",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGalaxyMember>;
    deployContract(
      name: "INodeManagement",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.INodeManagement>;
    deployContract(
      name: "ITokenAuction",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITokenAuction>;
    deployContract(
      name: "ITreasury",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITreasury>;
    deployContract(
      name: "IVeBetterPassport",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVeBetterPassport>;
    deployContract(
      name: "IVOT3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVOT3>;
    deployContract(
      name: "IVoterRewards",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVoterRewards>;
    deployContract(
      name: "IX2EarnApps",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IX2EarnApps>;
    deployContract(
      name: "IX2EarnCreator",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IX2EarnCreator>;
    deployContract(
      name: "IX2EarnRewardsPool",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IX2EarnRewardsPool>;
    deployContract(
      name: "IXAllocationPool",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXAllocationPool>;
    deployContract(
      name: "IXAllocationVotingGovernor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXAllocationVotingGovernor>;
    deployContract(
      name: "MockERC721Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockERC721Receiver>;
    deployContract(
      name: "MyERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyERC1155>;
    deployContract(
      name: "MyERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyERC721>;
    deployContract(
      name: "ClockAuction",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClockAuction>;
    deployContract(
      name: "ClockAuctionBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClockAuctionBase>;
    deployContract(
      name: "SupportsInterface",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SupportsInterface>;
    deployContract(
      name: "IEnergy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEnergy>;
    deployContract(
      name: "ThunderFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ThunderFactory>;
    deployContract(
      name: "TokenAuction",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TokenAuction>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "IVIP181",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVIP181>;
    deployContract(
      name: "IVIP181Enumerable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVIP181Enumerable>;
    deployContract(
      name: "IVIP181Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVIP181Metadata>;
    deployContract(
      name: "IVIP181Basic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVIP181Basic>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pausable>;
    deployContract(
      name: "XAccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAccessControl>;
    deployContract(
      name: "XOwnership",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XOwnership>;
    deployContract(
      name: "NodeManagement",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.NodeManagement>;
    deployContract(
      name: "BaseUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BaseUpgradeable>;
    deployContract(
      name: "ModuleInitializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ModuleInitializable>;
    deployContract(
      name: "TimeLock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TimeLock>;
    deployContract(
      name: "Treasury",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Treasury>;
    deployContract(
      name: "PassportChecksLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportChecksLogic>;
    deployContract(
      name: "PassportConfigurator",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportConfigurator>;
    deployContract(
      name: "PassportDelegationLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportDelegationLogic>;
    deployContract(
      name: "PassportEntityLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportEntityLogic>;
    deployContract(
      name: "PassportPersonhoodLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportPersonhoodLogic>;
    deployContract(
      name: "PassportPoPScoreLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportPoPScoreLogic>;
    deployContract(
      name: "PassportSignalingLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportSignalingLogic>;
    deployContract(
      name: "PassportWhitelistAndBlacklistLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportWhitelistAndBlacklistLogic>;
    deployContract(
      name: "VeBetterPassport",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VeBetterPassport>;
    deployContract(
      name: "VOT3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VOT3>;
    deployContract(
      name: "VoterRewards",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VoterRewards>;
    deployContract(
      name: "AdministrationUtils",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AdministrationUtils>;
    deployContract(
      name: "AppStorageUtils",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AppStorageUtils>;
    deployContract(
      name: "EndorsementUtils",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EndorsementUtils>;
    deployContract(
      name: "VoteEligibilityUtils",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VoteEligibilityUtils>;
    deployContract(
      name: "AdministrationUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AdministrationUpgradeable>;
    deployContract(
      name: "AppsStorageUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AppsStorageUpgradeable>;
    deployContract(
      name: "ContractSettingsUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractSettingsUpgradeable>;
    deployContract(
      name: "EndorsementUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EndorsementUpgradeable>;
    deployContract(
      name: "VoteEligibilityUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VoteEligibilityUpgradeable>;
    deployContract(
      name: "X2EarnAppsUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnAppsUpgradeable>;
    deployContract(
      name: "ExternalContractsUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ExternalContractsUpgradeable>;
    deployContract(
      name: "RoundEarningsSettingsUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundEarningsSettingsUpgradeable>;
    deployContract(
      name: "RoundFinalizationUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundFinalizationUpgradeable>;
    deployContract(
      name: "RoundsStorageUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundsStorageUpgradeable>;
    deployContract(
      name: "RoundVotesCountingUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundVotesCountingUpgradeable>;
    deployContract(
      name: "VotesQuorumFractionUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotesQuorumFractionUpgradeable>;
    deployContract(
      name: "VotesUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotesUpgradeable>;
    deployContract(
      name: "VotingSettingsUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotingSettingsUpgradeable>;
    deployContract(
      name: "XAllocationVotingGovernor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationVotingGovernor>;
    deployContract(
      name: "X2EarnApps",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnApps>;
    deployContract(
      name: "X2EarnCreator",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnCreator>;
    deployContract(
      name: "X2EarnRewardsPool",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnRewardsPool>;
    deployContract(
      name: "XAllocationPool",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationPool>;
    deployContract(
      name: "XAllocationVoting",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationVoting>;

    deployContract(
      name: "AccessControlUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControlUpgradeable>;
    deployContract(
      name: "OwnableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnableUpgradeable>;
    deployContract(
      name: "TimelockControllerUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TimelockControllerUpgradeable>;
    deployContract(
      name: "VotesUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotesUpgradeable>;
    deployContract(
      name: "Initializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "UUPSUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UUPSUpgradeable>;
    deployContract(
      name: "ERC1155HolderUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155HolderUpgradeable>;
    deployContract(
      name: "ERC20Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Upgradeable>;
    deployContract(
      name: "ERC20PausableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20PausableUpgradeable>;
    deployContract(
      name: "ERC20PermitUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20PermitUpgradeable>;
    deployContract(
      name: "ERC20VotesUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20VotesUpgradeable>;
    deployContract(
      name: "ERC721Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Upgradeable>;
    deployContract(
      name: "ERC721BurnableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721BurnableUpgradeable>;
    deployContract(
      name: "ERC721EnumerableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721EnumerableUpgradeable>;
    deployContract(
      name: "ERC721PausableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721PausableUpgradeable>;
    deployContract(
      name: "ERC721URIStorageUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721URIStorageUpgradeable>;
    deployContract(
      name: "ERC721HolderUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721HolderUpgradeable>;
    deployContract(
      name: "ContextUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContextUpgradeable>;
    deployContract(
      name: "EIP712Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712Upgradeable>;
    deployContract(
      name: "ERC165Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165Upgradeable>;
    deployContract(
      name: "NoncesUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.NoncesUpgradeable>;
    deployContract(
      name: "PausableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PausableUpgradeable>;
    deployContract(
      name: "ReentrancyGuardUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    deployContract(
      name: "AccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControl>;
    deployContract(
      name: "IAccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IVotes",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVotes>;
    deployContract(
      name: "IERC1822Proxiable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1822Proxiable>;
    deployContract(
      name: "IERC1155Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "IERC20Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC721Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "IERC4906",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC4906>;
    deployContract(
      name: "IERC5267",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267>;
    deployContract(
      name: "IERC5805",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5805>;
    deployContract(
      name: "IERC6372",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC6372>;
    deployContract(
      name: "IBeacon",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBeacon>;
    deployContract(
      name: "ERC1967Utils",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1967Utils>;
    deployContract(
      name: "Proxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Proxy>;
    deployContract(
      name: "ERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155>;
    deployContract(
      name: "IERC1155MetadataURI",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155MetadataURI>;
    deployContract(
      name: "IERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "ERC20Capped",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Capped>;
    deployContract(
      name: "ERC20Pausable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Pausable>;
    deployContract(
      name: "IERC20Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "ERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721>;
    deployContract(
      name: "IERC721Enumerable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Enumerable>;
    deployContract(
      name: "IERC721Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Metadata>;
    deployContract(
      name: "IERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "Address",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Address>;
    deployContract(
      name: "ECDSA",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECDSA>;
    deployContract(
      name: "ERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "Math",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Math>;
    deployContract(
      name: "SafeCast",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "Pausable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pausable>;
    deployContract(
      name: "Strings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "Checkpoints",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Checkpoints>;
    deployContract(
      name: "DoubleEndedQueue",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DoubleEndedQueue>;
    deployContract(
      name: "B3TR",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.B3TR>;
    deployContract(
      name: "B3TRGovernor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.B3TRGovernor>;
    deployContract(
      name: "B3TRProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.B3TRProxy>;
    deployContract(
      name: "B3TRGovernorV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.B3TRGovernorV1>;
    deployContract(
      name: "EmissionsV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EmissionsV1>;
    deployContract(
      name: "GalaxyMemberV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GalaxyMemberV1>;
    deployContract(
      name: "GovernorStorageV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorStorageV1>;
    deployContract(
      name: "GovernorClockLogicV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorClockLogicV1>;
    deployContract(
      name: "GovernorConfiguratorV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorConfiguratorV1>;
    deployContract(
      name: "GovernorDepositLogicV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorDepositLogicV1>;
    deployContract(
      name: "GovernorFunctionRestrictionsLogicV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorFunctionRestrictionsLogicV1>;
    deployContract(
      name: "GovernorGovernanceLogicV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorGovernanceLogicV1>;
    deployContract(
      name: "GovernorProposalLogicV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorProposalLogicV1>;
    deployContract(
      name: "GovernorQuorumLogicV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorQuorumLogicV1>;
    deployContract(
      name: "GovernorStateLogicV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorStateLogicV1>;
    deployContract(
      name: "GovernorVotesLogicV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorVotesLogicV1>;
    deployContract(
      name: "IB3TR",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IB3TR>;
    deployContract(
      name: "IB3TRGovernorV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IB3TRGovernorV1>;
    deployContract(
      name: "IEmissionsV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEmissionsV1>;
    deployContract(
      name: "IGalaxyMemberV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGalaxyMemberV1>;
    deployContract(
      name: "INodeManagementV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.INodeManagementV1>;
    deployContract(
      name: "IVeBetterPassportV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVeBetterPassportV1>;
    deployContract(
      name: "IVoterRewardsV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVoterRewardsV1>;
    deployContract(
      name: "IX2EarnAppsV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IX2EarnAppsV1>;
    deployContract(
      name: "IX2EarnRewardsPoolV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IX2EarnRewardsPoolV1>;
    deployContract(
      name: "IXAllocationPoolV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXAllocationPoolV1>;
    deployContract(
      name: "IXAllocationVotingGovernorV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXAllocationVotingGovernorV1>;
    deployContract(
      name: "NodeManagementV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.NodeManagementV1>;
    deployContract(
      name: "PassportChecksLogicV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportChecksLogicV1>;
    deployContract(
      name: "PassportConfiguratorV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportConfiguratorV1>;
    deployContract(
      name: "PassportDelegationLogicV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportDelegationLogicV1>;
    deployContract(
      name: "PassportEntityLogicV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportEntityLogicV1>;
    deployContract(
      name: "PassportPersonhoodLogicV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportPersonhoodLogicV1>;
    deployContract(
      name: "PassportPoPScoreLogicV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportPoPScoreLogicV1>;
    deployContract(
      name: "PassportSignalingLogicV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportSignalingLogicV1>;
    deployContract(
      name: "PassportWhitelistAndBlacklistLogicV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportWhitelistAndBlacklistLogicV1>;
    deployContract(
      name: "VeBetterPassportV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VeBetterPassportV1>;
    deployContract(
      name: "VoterRewardsV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VoterRewardsV1>;
    deployContract(
      name: "AdministrationUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AdministrationUpgradeable>;
    deployContract(
      name: "AppsStorageUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AppsStorageUpgradeable>;
    deployContract(
      name: "ContractSettingsUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractSettingsUpgradeable>;
    deployContract(
      name: "VoteEligibilityUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VoteEligibilityUpgradeable>;
    deployContract(
      name: "X2EarnAppsUpgradeableV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnAppsUpgradeableV1>;
    deployContract(
      name: "ExternalContractsUpgradeableV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ExternalContractsUpgradeableV1>;
    deployContract(
      name: "RoundEarningsSettingsUpgradeableV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundEarningsSettingsUpgradeableV1>;
    deployContract(
      name: "RoundFinalizationUpgradeableV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundFinalizationUpgradeableV1>;
    deployContract(
      name: "RoundsStorageUpgradeableV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundsStorageUpgradeableV1>;
    deployContract(
      name: "RoundVotesCountingUpgradeableV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundVotesCountingUpgradeableV1>;
    deployContract(
      name: "VotesQuorumFractionUpgradeableV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotesQuorumFractionUpgradeableV1>;
    deployContract(
      name: "VotesUpgradeableV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotesUpgradeableV1>;
    deployContract(
      name: "VotingSettingsUpgradeableV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotingSettingsUpgradeableV1>;
    deployContract(
      name: "XAllocationVotingGovernorV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationVotingGovernorV1>;
    deployContract(
      name: "X2EarnAppsV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnAppsV1>;
    deployContract(
      name: "X2EarnRewardsPoolV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnRewardsPoolV1>;
    deployContract(
      name: "XAllocationPoolV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationPoolV1>;
    deployContract(
      name: "XAllocationVotingV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationVotingV1>;
    deployContract(
      name: "B3TRGovernorV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.B3TRGovernorV2>;
    deployContract(
      name: "GalaxyMemberV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GalaxyMemberV2>;
    deployContract(
      name: "IGalaxyMemberV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGalaxyMemberV2>;
    deployContract(
      name: "IVeBetterPassportV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVeBetterPassportV2>;
    deployContract(
      name: "IVoterRewardsV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVoterRewardsV2>;
    deployContract(
      name: "IX2EarnAppsV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IX2EarnAppsV2>;
    deployContract(
      name: "IX2EarnRewardsPoolV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IX2EarnRewardsPoolV2>;
    deployContract(
      name: "IXAllocationPoolV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXAllocationPoolV2>;
    deployContract(
      name: "IXAllocationVotingGovernorV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXAllocationVotingGovernorV2>;
    deployContract(
      name: "PassportChecksLogicV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportChecksLogicV2>;
    deployContract(
      name: "PassportConfiguratorV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportConfiguratorV2>;
    deployContract(
      name: "PassportDelegationLogicV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportDelegationLogicV2>;
    deployContract(
      name: "PassportEntityLogicV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportEntityLogicV2>;
    deployContract(
      name: "PassportPersonhoodLogicV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportPersonhoodLogicV2>;
    deployContract(
      name: "PassportPoPScoreLogicV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportPoPScoreLogicV2>;
    deployContract(
      name: "PassportSignalingLogicV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportSignalingLogicV2>;
    deployContract(
      name: "PassportWhitelistAndBlacklistLogicV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportWhitelistAndBlacklistLogicV2>;
    deployContract(
      name: "VeBetterPassportV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VeBetterPassportV2>;
    deployContract(
      name: "VoterRewardsV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VoterRewardsV2>;
    deployContract(
      name: "AdministrationUtilsV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AdministrationUtilsV2>;
    deployContract(
      name: "AppStorageUtilsV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AppStorageUtilsV2>;
    deployContract(
      name: "EndorsementUtilsV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EndorsementUtilsV2>;
    deployContract(
      name: "VoteEligibilityUtilsV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VoteEligibilityUtilsV2>;
    deployContract(
      name: "AdministrationUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AdministrationUpgradeable>;
    deployContract(
      name: "AppsStorageUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AppsStorageUpgradeable>;
    deployContract(
      name: "ContractSettingsUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractSettingsUpgradeable>;
    deployContract(
      name: "EndorsementUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EndorsementUpgradeable>;
    deployContract(
      name: "VoteEligibilityUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VoteEligibilityUpgradeable>;
    deployContract(
      name: "X2EarnAppsUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnAppsUpgradeable>;
    deployContract(
      name: "ExternalContractsUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ExternalContractsUpgradeable>;
    deployContract(
      name: "RoundEarningsSettingsUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundEarningsSettingsUpgradeable>;
    deployContract(
      name: "RoundFinalizationUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundFinalizationUpgradeable>;
    deployContract(
      name: "RoundsStorageUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundsStorageUpgradeable>;
    deployContract(
      name: "RoundVotesCountingUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundVotesCountingUpgradeable>;
    deployContract(
      name: "VotesQuorumFractionUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotesQuorumFractionUpgradeable>;
    deployContract(
      name: "VotesUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotesUpgradeable>;
    deployContract(
      name: "VotingSettingsUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotingSettingsUpgradeable>;
    deployContract(
      name: "XAllocationVotingGovernor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationVotingGovernor>;
    deployContract(
      name: "X2EarnAppsV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnAppsV2>;
    deployContract(
      name: "X2EarnRewardsPoolV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnRewardsPoolV2>;
    deployContract(
      name: "XAllocationPoolV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationPoolV2>;
    deployContract(
      name: "XAllocationVotingV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationVotingV2>;
    deployContract(
      name: "B3TRGovernorV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.B3TRGovernorV3>;
    deployContract(
      name: "GovernorStorageV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorStorageV3>;
    deployContract(
      name: "GovernorClockLogicV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorClockLogicV3>;
    deployContract(
      name: "GovernorConfiguratorV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorConfiguratorV3>;
    deployContract(
      name: "GovernorDepositLogicV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorDepositLogicV3>;
    deployContract(
      name: "GovernorFunctionRestrictionsLogicV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorFunctionRestrictionsLogicV3>;
    deployContract(
      name: "GovernorGovernanceLogicV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorGovernanceLogicV3>;
    deployContract(
      name: "GovernorProposalLogicV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorProposalLogicV3>;
    deployContract(
      name: "GovernorQuorumLogicV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorQuorumLogicV3>;
    deployContract(
      name: "GovernorStateLogicV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorStateLogicV3>;
    deployContract(
      name: "GovernorVotesLogicV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorVotesLogicV3>;
    deployContract(
      name: "IB3TRGovernorV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IB3TRGovernorV3>;
    deployContract(
      name: "IX2EarnRewardsPoolV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IX2EarnRewardsPoolV3>;
    deployContract(
      name: "VoterRewardsV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VoterRewardsV3>;
    deployContract(
      name: "ExternalContractsUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ExternalContractsUpgradeable>;
    deployContract(
      name: "RoundEarningsSettingsUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundEarningsSettingsUpgradeable>;
    deployContract(
      name: "RoundFinalizationUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundFinalizationUpgradeable>;
    deployContract(
      name: "RoundsStorageUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundsStorageUpgradeable>;
    deployContract(
      name: "RoundVotesCountingUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundVotesCountingUpgradeable>;
    deployContract(
      name: "VotesQuorumFractionUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotesQuorumFractionUpgradeable>;
    deployContract(
      name: "VotesUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotesUpgradeable>;
    deployContract(
      name: "VotingSettingsUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotingSettingsUpgradeable>;
    deployContract(
      name: "XAllocationVotingGovernor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationVotingGovernor>;
    deployContract(
      name: "X2EarnRewardsPoolV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnRewardsPoolV3>;
    deployContract(
      name: "XAllocationPoolV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationPoolV3>;
    deployContract(
      name: "XAllocationVotingV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationVotingV3>;
    deployContract(
      name: "B3TRGovernorV4",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.B3TRGovernorV4>;
    deployContract(
      name: "GovernorStorageV4",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorStorageV4>;
    deployContract(
      name: "GovernorClockLogicV4",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorClockLogicV4>;
    deployContract(
      name: "GovernorConfiguratorV4",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorConfiguratorV4>;
    deployContract(
      name: "GovernorDepositLogicV4",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorDepositLogicV4>;
    deployContract(
      name: "GovernorFunctionRestrictionsLogicV4",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorFunctionRestrictionsLogicV4>;
    deployContract(
      name: "GovernorGovernanceLogicV4",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorGovernanceLogicV4>;
    deployContract(
      name: "GovernorProposalLogicV4",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorProposalLogicV4>;
    deployContract(
      name: "GovernorQuorumLogicV4",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorQuorumLogicV4>;
    deployContract(
      name: "GovernorStateLogicV4",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorStateLogicV4>;
    deployContract(
      name: "GovernorVotesLogicV4",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorVotesLogicV4>;
    deployContract(
      name: "IB3TRGovernorV4",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IB3TRGovernorV4>;
    deployContract(
      name: "IX2EarnRewardsPoolV4",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IX2EarnRewardsPoolV4>;
    deployContract(
      name: "X2EarnRewardsPoolV4",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnRewardsPoolV4>;
    deployContract(
      name: "Emissions",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Emissions>;
    deployContract(
      name: "GalaxyMember",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GalaxyMember>;
    deployContract(
      name: "GovernorStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorStorage>;
    deployContract(
      name: "GovernorClockLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorClockLogic>;
    deployContract(
      name: "GovernorConfigurator",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorConfigurator>;
    deployContract(
      name: "GovernorDepositLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorDepositLogic>;
    deployContract(
      name: "GovernorFunctionRestrictionsLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorFunctionRestrictionsLogic>;
    deployContract(
      name: "GovernorGovernanceLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorGovernanceLogic>;
    deployContract(
      name: "GovernorProposalLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorProposalLogic>;
    deployContract(
      name: "GovernorQuorumLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorQuorumLogic>;
    deployContract(
      name: "GovernorStateLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorStateLogic>;
    deployContract(
      name: "GovernorVotesLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorVotesLogic>;
    deployContract(
      name: "IB3TR",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IB3TR>;
    deployContract(
      name: "IB3TRGovernor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IB3TRGovernor>;
    deployContract(
      name: "IEmissions",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEmissions>;
    deployContract(
      name: "IERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IGalaxyMember",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGalaxyMember>;
    deployContract(
      name: "INodeManagement",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.INodeManagement>;
    deployContract(
      name: "ITokenAuction",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITokenAuction>;
    deployContract(
      name: "ITreasury",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITreasury>;
    deployContract(
      name: "IVeBetterPassport",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVeBetterPassport>;
    deployContract(
      name: "IVOT3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVOT3>;
    deployContract(
      name: "IVoterRewards",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVoterRewards>;
    deployContract(
      name: "IX2EarnApps",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IX2EarnApps>;
    deployContract(
      name: "IX2EarnCreator",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IX2EarnCreator>;
    deployContract(
      name: "IX2EarnRewardsPool",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IX2EarnRewardsPool>;
    deployContract(
      name: "IXAllocationPool",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXAllocationPool>;
    deployContract(
      name: "IXAllocationVotingGovernor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXAllocationVotingGovernor>;
    deployContract(
      name: "MockERC721Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockERC721Receiver>;
    deployContract(
      name: "MyERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyERC1155>;
    deployContract(
      name: "MyERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyERC721>;
    deployContract(
      name: "ClockAuction",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClockAuction>;
    deployContract(
      name: "ClockAuctionBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ClockAuctionBase>;
    deployContract(
      name: "SupportsInterface",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SupportsInterface>;
    deployContract(
      name: "IEnergy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEnergy>;
    deployContract(
      name: "ThunderFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ThunderFactory>;
    deployContract(
      name: "TokenAuction",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TokenAuction>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "IVIP181",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVIP181>;
    deployContract(
      name: "IVIP181Enumerable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVIP181Enumerable>;
    deployContract(
      name: "IVIP181Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVIP181Metadata>;
    deployContract(
      name: "IVIP181Basic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVIP181Basic>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "Pausable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pausable>;
    deployContract(
      name: "XAccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAccessControl>;
    deployContract(
      name: "XOwnership",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XOwnership>;
    deployContract(
      name: "NodeManagement",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.NodeManagement>;
    deployContract(
      name: "BaseUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BaseUpgradeable>;
    deployContract(
      name: "ModuleInitializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ModuleInitializable>;
    deployContract(
      name: "TimeLock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TimeLock>;
    deployContract(
      name: "Treasury",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Treasury>;
    deployContract(
      name: "PassportChecksLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportChecksLogic>;
    deployContract(
      name: "PassportConfigurator",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportConfigurator>;
    deployContract(
      name: "PassportDelegationLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportDelegationLogic>;
    deployContract(
      name: "PassportEntityLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportEntityLogic>;
    deployContract(
      name: "PassportPersonhoodLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportPersonhoodLogic>;
    deployContract(
      name: "PassportPoPScoreLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportPoPScoreLogic>;
    deployContract(
      name: "PassportSignalingLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportSignalingLogic>;
    deployContract(
      name: "PassportWhitelistAndBlacklistLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PassportWhitelistAndBlacklistLogic>;
    deployContract(
      name: "VeBetterPassport",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VeBetterPassport>;
    deployContract(
      name: "VOT3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VOT3>;
    deployContract(
      name: "VoterRewards",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VoterRewards>;
    deployContract(
      name: "AdministrationUtils",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AdministrationUtils>;
    deployContract(
      name: "AppStorageUtils",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AppStorageUtils>;
    deployContract(
      name: "EndorsementUtils",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EndorsementUtils>;
    deployContract(
      name: "VoteEligibilityUtils",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VoteEligibilityUtils>;
    deployContract(
      name: "AdministrationUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AdministrationUpgradeable>;
    deployContract(
      name: "AppsStorageUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AppsStorageUpgradeable>;
    deployContract(
      name: "ContractSettingsUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractSettingsUpgradeable>;
    deployContract(
      name: "EndorsementUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EndorsementUpgradeable>;
    deployContract(
      name: "VoteEligibilityUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VoteEligibilityUpgradeable>;
    deployContract(
      name: "X2EarnAppsUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnAppsUpgradeable>;
    deployContract(
      name: "ExternalContractsUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ExternalContractsUpgradeable>;
    deployContract(
      name: "RoundEarningsSettingsUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundEarningsSettingsUpgradeable>;
    deployContract(
      name: "RoundFinalizationUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundFinalizationUpgradeable>;
    deployContract(
      name: "RoundsStorageUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundsStorageUpgradeable>;
    deployContract(
      name: "RoundVotesCountingUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoundVotesCountingUpgradeable>;
    deployContract(
      name: "VotesQuorumFractionUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotesQuorumFractionUpgradeable>;
    deployContract(
      name: "VotesUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotesUpgradeable>;
    deployContract(
      name: "VotingSettingsUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotingSettingsUpgradeable>;
    deployContract(
      name: "XAllocationVotingGovernor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationVotingGovernor>;
    deployContract(
      name: "X2EarnApps",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnApps>;
    deployContract(
      name: "X2EarnCreator",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnCreator>;
    deployContract(
      name: "X2EarnRewardsPool",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.X2EarnRewardsPool>;
    deployContract(
      name: "XAllocationPool",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationPool>;
    deployContract(
      name: "XAllocationVoting",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XAllocationVoting>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
