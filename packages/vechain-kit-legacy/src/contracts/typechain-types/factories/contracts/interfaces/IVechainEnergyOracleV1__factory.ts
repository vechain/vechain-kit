/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IVechainEnergyOracleV1,
  IVechainEnergyOracleV1Interface,
} from "../../../contracts/interfaces/IVechainEnergyOracleV1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "value",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "updatedAt",
        type: "uint128",
      },
    ],
    name: "ValueUpdate",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "getLatestValue",
    outputs: [
      {
        internalType: "uint128",
        name: "value",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "updatedAt",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "signedFor",
        type: "address",
      },
    ],
    name: "updateValueWithProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IVechainEnergyOracleV1__factory {
  static readonly abi = _abi;
  static createInterface(): IVechainEnergyOracleV1Interface {
    return new Interface(_abi) as IVechainEnergyOracleV1Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IVechainEnergyOracleV1 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IVechainEnergyOracleV1;
  }
}
