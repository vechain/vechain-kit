/* Autogenerated file. Do not edit manually. */
/* tslint:disable */

import {
    Contract,
    ContractFactory,
    ContractTransactionResponse,
    Interface,
} from 'ethers';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../../common';
import type {
    UserOperationLib,
    UserOperationLibInterface,
} from '../../../contracts/core/UserOperationLib';

const _abi = [
    {
        inputs: [],
        name: 'PAYMASTER_DATA_OFFSET',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'PAYMASTER_POSTOP_GAS_OFFSET',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'PAYMASTER_VALIDATION_GAS_OFFSET',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
] as const;

const _bytecode =
    '0x60a9610039600b82828239805160001a60731461002c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060475760003560e01c806325093e1b14604c578063b29a8ff4146065578063ede3150214606c575b600080fd5b6053602481565b60405190815260200160405180910390f35b6053601481565b605360348156fea2646970667358221220fee8badd6372d6fb67f4edccdd8fa4b6270869b8d9ffbffd24e1e924fea7ed1d64736f6c63430008140033';

type UserOperationLibConstructorParams =
    | [signer?: Signer]
    | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
    xs: UserOperationLibConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UserOperationLib__factory extends ContractFactory {
    constructor(...args: UserOperationLibConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
    }

    override getDeployTransaction(
        overrides?: NonPayableOverrides & { from?: string },
    ): Promise<ContractDeployTransaction> {
        return super.getDeployTransaction(overrides || {});
    }
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
        return super.deploy(overrides || {}) as Promise<
            UserOperationLib & {
                deploymentTransaction(): ContractTransactionResponse;
            }
        >;
    }
    override connect(runner: ContractRunner | null): UserOperationLib__factory {
        return super.connect(runner) as UserOperationLib__factory;
    }

    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): UserOperationLibInterface {
        return new Interface(_abi) as UserOperationLibInterface;
    }
    static connect(
        address: string,
        runner?: ContractRunner | null,
    ): UserOperationLib {
        return new Contract(
            address,
            _abi,
            runner,
        ) as unknown as UserOperationLib;
    }
}
